###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.10194/W32 for 8051         20/Apr/2015  20:08:08 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\EndDevice    #
#                          Project for editing\Components\hal\target\CC2530EB #
#                          \hal_lcd.c                                         #
#    Command line       =  -f "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\EndDevic #
#                          e Project for editing\Projects\zstack\MyEnddevice\ #
#                          EndDevice\CC2530DB\..\..\..\Tools\CC2530DB\f8wEnde #
#                          v.cfg" (-DCPU32MHZ -DROOT=__near_func              #
#                          -DMAC_CFG_TX_DATA_MAX=3 -DMAC_CFG_TX_MAX=6         #
#                          -DMAC_CFG_RX_MAX=3) -f "C:\Users\William\Desktop\± #
#                          œ“µ…Ëº∆\SRC\EndDevice Project for                  #
#                          editing\Projects\zstack\MyEnddevice\EndDevice\CC25 #
#                          30DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg"        #
#                          (-DZIGBEEPRO -DSECURE=0 -DZG_SECURE_DYNAMIC=0      #
#                          -DREFLECTOR -DDEFAULT_CHANLIST=0x02000000          #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 "C:\Users\William\Desktop\± #
#                          œ“µ…Ëº∆\SRC\EndDevice Project for                  #
#                          editing\Components\hal\target\CC2530EB\hal_lcd.c"  #
#                          -D NWK_AUTO_POLL -D NV_RESTORE=1 -D xZTOOL_P1 -D   #
#                          xMT_TASK -D xMT_SYS_FUNC -D xMT_ZDO_FUNC -D        #
#                          xLCD_SUPPORTED=DEBUG -lC                           #
#                          "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\EndDevice   #
#                          Project for editing\Projects\zstack\MyEnddevice\En #
#                          dDevice\CC2530DB\EndDeviceEB\List\" -lA            #
#                          "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\EndDevice   #
#                          Project for editing\Projects\zstack\MyEnddevice\En #
#                          dDevice\CC2530DB\EndDeviceEB\List\"                #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\EndDevice   #
#                          Project for editing\Projects\zstack\MyEnddevice\En #
#                          dDevice\CC2530DB\EndDeviceEB\Obj\" -e              #
#                          --no_code_motion --debug --core=plain --dptr=16,1  #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\EndDevic #
#                          e Project for editing\Projects\zstack\MyEnddevice\ #
#                          EndDevice\CC2530DB\" -I "C:\Users\William\Desktop\ #
#                          ±œ“µ…Ëº∆\SRC\EndDevice Project for                 #
#                          editing\Projects\zstack\MyEnddevice\EndDevice\CC25 #
#                          30DB\..\Source\" -I "C:\Users\William\Desktop\±œ“µ #
#                          …Ëº∆\SRC\EndDevice Project for                     #
#                          editing\Projects\zstack\MyEnddevice\EndDevice\CC25 #
#                          30DB\..\..\..\ZMain\TI2530DB\" -I                  #
#                          "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\EndDevice   #
#                          Project for editing\Projects\zstack\MyEnddevice\En #
#                          dDevice\CC2530DB\..\..\..\..\..\Components\hal\inc #
#                          lude\" -I "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\E #
#                          ndDevice Project for editing\Projects\zstack\MyEnd #
#                          device\EndDevice\CC2530DB\..\..\..\..\..\Component #
#                          s\hal\target\CC2530EB\" -I                         #
#                          "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\EndDevice   #
#                          Project for editing\Projects\zstack\MyEnddevice\En #
#                          dDevice\CC2530DB\..\..\..\..\..\Components\mac\inc #
#                          lude\" -I "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\E #
#                          ndDevice Project for editing\Projects\zstack\MyEnd #
#                          device\EndDevice\CC2530DB\..\..\..\..\..\Component #
#                          s\mac\high_level\" -I "C:\Users\William\Desktop\±œ #
#                          “µ…Ëº∆\SRC\EndDevice Project for                   #
#                          editing\Projects\zstack\MyEnddevice\EndDevice\CC25 #
#                          30DB\..\..\..\..\..\Components\mac\low_level\srf04 #
#                          \" -I "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\EndDe #
#                          vice Project for editing\Projects\zstack\MyEnddevi #
#                          ce\EndDevice\CC2530DB\..\..\..\..\..\Components\ma #
#                          c\low_level\srf04\single_chip\" -I                 #
#                          "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\EndDevice   #
#                          Project for editing\Projects\zstack\MyEnddevice\En #
#                          dDevice\CC2530DB\..\..\..\..\..\Components\mt\"    #
#                          -I "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\EndDevic #
#                          e Project for editing\Projects\zstack\MyEnddevice\ #
#                          EndDevice\CC2530DB\..\..\..\..\..\Components\osal\ #
#                          include\" -I "C:\Users\William\Desktop\±œ“µ…Ëº∆\SR #
#                          C\EndDevice Project for editing\Projects\zstack\My #
#                          Enddevice\EndDevice\CC2530DB\..\..\..\..\..\Compon #
#                          ents\services\saddr\" -I                           #
#                          "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\EndDevice   #
#                          Project for editing\Projects\zstack\MyEnddevice\En #
#                          dDevice\CC2530DB\..\..\..\..\..\Components\service #
#                          s\sdata\" -I "C:\Users\William\Desktop\±œ“µ…Ëº∆\SR #
#                          C\EndDevice Project for editing\Projects\zstack\My #
#                          Enddevice\EndDevice\CC2530DB\..\..\..\..\..\Compon #
#                          ents\stack\af\" -I "C:\Users\William\Desktop\±œ“µ… #
#                          Ëº∆\SRC\EndDevice Project for                      #
#                          editing\Projects\zstack\MyEnddevice\EndDevice\CC25 #
#                          30DB\..\..\..\..\..\Components\stack\nwk\" -I      #
#                          "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\EndDevice   #
#                          Project for editing\Projects\zstack\MyEnddevice\En #
#                          dDevice\CC2530DB\..\..\..\..\..\Components\stack\s #
#                          api\" -I "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\En #
#                          dDevice Project for editing\Projects\zstack\MyEndd #
#                          evice\EndDevice\CC2530DB\..\..\..\..\..\Components #
#                          \stack\sec\" -I "C:\Users\William\Desktop\±œ“µ…Ëº∆ #
#                          \SRC\EndDevice Project for                         #
#                          editing\Projects\zstack\MyEnddevice\EndDevice\CC25 #
#                          30DB\..\..\..\..\..\Components\stack\sys\" -I      #
#                          "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\EndDevice   #
#                          Project for editing\Projects\zstack\MyEnddevice\En #
#                          dDevice\CC2530DB\..\..\..\..\..\Components\stack\z #
#                          do\" -I "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\End #
#                          Device Project for editing\Projects\zstack\MyEndde #
#                          vice\EndDevice\CC2530DB\..\..\..\..\..\Components\ #
#                          zmac\" -I "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\E #
#                          ndDevice Project for editing\Projects\zstack\MyEnd #
#                          device\EndDevice\CC2530DB\..\..\..\..\..\Component #
#                          s\zmac\f8w\" -Ohz                                  #
#    List file          =  C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\EndDevice    #
#                          Project for editing\Projects\zstack\MyEnddevice\En #
#                          dDevice\CC2530DB\EndDeviceEB\List\hal_lcd.lst      #
#    Object file        =  C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\EndDevice    #
#                          Project for editing\Projects\zstack\MyEnddevice\En #
#                          dDevice\CC2530DB\EndDeviceEB\Obj\hal_lcd.r51       #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\EndDevice Project for editing\Components\hal\target\CC2530EB\hal_lcd.c
      1          /**************************************************************************************************
      2            Filename:       hal_lcd.c
      3            Revised:        $Date: 2010-06-21 17:31:27 -0700 (Mon, 21 Jun 2010) $
      4            Revision:       $Revision: 22794 $
      5          
      6            Description:    This file contains the interface to the HAL LCD Service.
      7          
      8          
      9            Copyright 2007-2010 Texas Instruments Incorporated. All rights reserved.
     10          
     11            IMPORTANT: Your use of this Software is limited to those specific rights
     12            granted under the terms of a software license agreement between the user
     13            who downloaded the software, his/her employer (which must be your employer)
     14            and Texas Instruments Incorporated (the "License").  You may not use this
     15            Software unless you agree to abide by the terms of the License. The License
     16            limits your use, and you acknowledge, that the Software may not be modified,
     17            copied or distributed unless embedded on a Texas Instruments microcontroller
     18            or used solely and exclusively in conjunction with a Texas Instruments radio
     19            frequency transceiver, which is integrated into your product.  Other than for
     20            the foregoing purpose, you may not use, reproduce, copy, prepare derivative
     21            works of, modify, distribute, perform, display or sell this Software and/or
     22            its documentation for any purpose.
     23          
     24            YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
     25            PROVIDED ìAS IS?WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
     26            INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
     27            NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
     28            TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
     29            NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
     30            LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
     31            INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
     32            OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
     33            OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
     34            (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
     35          
     36            Should you have any questions regarding your right to use this Software,
     37            contact Texas Instruments Incorporated at www.TI.com.
     38          **************************************************************************************************/
     39          
     40          /**************************************************************************************************
     41           *                                           INCLUDES
     42           **************************************************************************************************/
     43          #include "hal_types.h"
     44          #include "hal_lcd.h"

   \                                 In  segment SFR_AN, at 0x90
   \   union <unnamed> volatile __sfr _A_P1
   \                     _A_P1:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xa0
   \   union <unnamed> volatile __sfr _A_P2
   \                     _A_P2:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf4
   \   unsigned char volatile __sfr P1SEL
   \                     P1SEL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf5
   \   unsigned char volatile __sfr P2SEL
   \                     P2SEL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfe
   \   unsigned char volatile __sfr P1DIR
   \                     P1DIR:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xff
   \   unsigned char volatile __sfr P2DIR
   \                     P2DIR:
   \   000000                DS 1
     45          #include "OSAL.h"
     46          #include "OnBoard.h"
     47          #include "hal_assert.h"
     48          
     49          #if defined (ZTOOL_P1) || defined (ZTOOL_P2)
     50            #include "DebugTrace.h"
     51          #endif
     52          
     53          /**************************************************************************************************
     54           *                                          CONSTANTS
     55           **************************************************************************************************/
     56          
     57          /**************************************************************
     58           *
     59           *  the  picture of set temprature label 
     60           *
     61           ****************************************************************/

   \                                 In  segment XDATA_ROM_C, align 1
     62          const uint8 ST_PIC[30] =
   \                     ST_PIC:
   \   000000   F8           DB 248
   \   000001   84           DB 132
   \   000002   84           DB 132
   \   000003   84           DB 132
   \   000004   84           DB 132
   \   000005   84           DB 132
   \   000006   84           DB 132
   \   000007   00           DB 0
   \   000008   00           DB 0
   \   000009   00           DB 0
   \   00000A   04           DB 4
   \   00000B   04           DB 4
   \   00000C   FC           DB 252
   \   00000D   04           DB 4
   \   00000E   04           DB 4
   \   00000F   20           DB 32
   \   000010   20           DB 32
   \   000011   20           DB 32
   \   000012   20           DB 32
   \   000013   20           DB 32
   \   000014   20           DB 32
   \   000015   1F           DB 31
   \   000016   00           DB 0
   \   000017   00           DB 0
   \   000018   00           DB 0
   \   000019   00           DB 0
   \   00001A   00           DB 0
   \   00001B   3F           DB 63
   \   00001C   00           DB 0
   \   00001D   00           DB 0
     63          {
     64           0xF8,0x84,0x84,0x84,0x84,0x84,0x84,0x00,0x00,0x00,0x04,0x04,0xFC,0x04,0x04,
     65           0x20,0x20,0x20,0x20,0x20,0x20,0x1F,0x00,0x00,0x00,0x00,0x00,0x3F,0x00,0x00 
     66          };
     67          
     68          /**************************************************************
     69           *
     70           *  the  picture of set temprature unit label 
     71           *
     72           ****************************************************************/

   \                                 In  segment XDATA_ROM_C, align 1
     73          const uint8 ST_Unit[20] =
   \                     ST_Unit:
   \   000000   60           DB 96
   \   000001   90           DB 144
   \   000002   90           DB 144
   \   000003   60           DB 96
   \   000004   80           DB 128
   \   000005   40           DB 64
   \   000006   40           DB 64
   \   000007   40           DB 64
   \   000008   40           DB 64
   \   000009   80           DB 128
   \   00000A   80           DB 128
   \   00000B   80           DB 128
   \   00000C   80           DB 128
   \   00000D   80           DB 128
   \   00000E   8F           DB 143
   \   00000F   90           DB 144
   \   000010   90           DB 144
   \   000011   90           DB 144
   \   000012   90           DB 144
   \   000013   88           DB 136
     74          {
     75           0x60,0x90,0x90,0x60,0x80,0x40,0x40,0x40,0x40,0x80,
     76           0x80,0x80,0x80,0x80,0x8F,0x90,0x90,0x90,0x90,0x88
     77          };
     78          
     79          /**************************************************************
     80           *
     81           *  the  picture of real temprature unit label 
     82           *
     83           ****************************************************************/

   \                                 In  segment XDATA_ROM_C, align 1
     84          const uint8 RT_Unit[22] =
   \                     RT_Unit:
   \   000000   0C           DB 12
   \   000001   12           DB 18
   \   000002   12           DB 18
   \   000003   0C           DB 12
   \   000004   00           DB 0
   \   000005   F0           DB 240
   \   000006   08           DB 8
   \   000007   08           DB 8
   \   000008   08           DB 8
   \   000009   08           DB 8
   \   00000A   10           DB 16
   \   00000B   00           DB 0
   \   00000C   00           DB 0
   \   00000D   00           DB 0
   \   00000E   00           DB 0
   \   00000F   00           DB 0
   \   000010   01           DB 1
   \   000011   02           DB 2
   \   000012   02           DB 2
   \   000013   02           DB 2
   \   000014   02           DB 2
   \   000015   01           DB 1
     85          {
     86          0x0C,0x12,0x12,0x0C,0x00,0xF0,0x08,0x08,0x08,0x08,0x10,
     87          0x00,0x00,0x00,0x00,0x00,0x01,0x02,0x02,0x02,0x02,0x01
     88          };
     89          
     90          /**************************************************************
     91           *
     92           *  the  picture of wifi label 
     93           *
     94           ****************************************************************/

   \                                 In  segment XDATA_ROM_C, align 1
     95          const uint8 WiFi[81] =
   \                     WiFi:
   \   000000   00           DB 0
   \   000001   80           DB 128
   \   000002   C0           DB 192
   \   000003   E0           DB 224
   \   000004   F0           DB 240
   \   000005   78           DB 120
   \   000006   38           DB 56
   \   000007   3C           DB 60
   \   000008   1C           DB 28
   \   000009   1C           DB 28
   \   00000A   1C           DB 28
   \   00000B   1C           DB 28
   \   00000C   1C           DB 28
   \   00000D   1C           DB 28
   \   00000E   1C           DB 28
   \   00000F   1C           DB 28
   \   000010   1C           DB 28
   \   000011   1C           DB 28
   \   000012   1C           DB 28
   \   000013   3C           DB 60
   \   000014   38           DB 56
   \   000015   78           DB 120
   \   000016   F0           DB 240
   \   000017   E0           DB 224
   \   000018   C0           DB 192
   \   000019   80           DB 128
   \   00001A   00           DB 0
   \   00001B   07           DB 7
   \   00001C   07           DB 7
   \   00001D   03           DB 3
   \   00001E   01           DB 1
   \   00001F   E0           DB 224
   \   000020   F0           DB 240
   \   000021   78           DB 120
   \   000022   3C           DB 60
   \   000023   1E           DB 30
   \   000024   0E           DB 14
   \   000025   0F           DB 15
   \   000026   07           DB 7
   \   000027   87           DB 135
   \   000028   87           DB 135
   \   000029   87           DB 135
   \   00002A   07           DB 7
   \   00002B   0F           DB 15
   \   00002C   0E           DB 14
   \   00002D   1E           DB 30
   \   00002E   3C           DB 60
   \   00002F   78           DB 120
   \   000030   F0           DB 240
   \   000031   E0           DB 224
   \   000032   01           DB 1
   \   000033   03           DB 3
   \   000034   07           DB 7
   \   000035   07           DB 7
   \   000036   80           DB 128
   \   000037   80           DB 128
   \   000038   80           DB 128
   \   000039   80           DB 128
   \   00003A   80           DB 128
   \   00003B   80           DB 128
   \   00003C   80           DB 128
   \   00003D   80           DB 128
   \   00003E   80           DB 128
   \   00003F   80           DB 128
   \   000040   8E           DB 142
   \   000041   9F           DB 159
   \   000042   BF           DB 191
   \   000043   BF           DB 191
   \   000044   BF           DB 191
   \   000045   9F           DB 159
   \   000046   8E           DB 142
   \   000047   80           DB 128
   \   000048   80           DB 128
   \   000049   80           DB 128
   \   00004A   80           DB 128
   \   00004B   80           DB 128
   \   00004C   80           DB 128
   \   00004D   80           DB 128
   \   00004E   80           DB 128
   \   00004F   80           DB 128
   \   000050   80           DB 128
     96          {
     97            /*--  µ˜»Î¡À“ª∑˘ÕºœÒ£∫C:\Users\William\Desktop\mode\WIFIMOD.bmp  --*/
     98          /*--  øÌ∂»x∏ﬂ∂»=27x24  --*/
     99          
    100          0x00,0x80,0xC0,0xE0,0xF0,0x78,0x38,0x3C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,
    101          0x1C,0x1C,0x1C,0x3C,0x38,0x78,0xF0,0xE0,0xC0,0x80,0x00,0x07,0x07,0x03,0x01,0xE0,
    102          0xF0,0x78,0x3C,0x1E,0x0E,0x0F,0x07,0x87,0x87,0x87,0x07,0x0F,0x0E,0x1E,0x3C,0x78,
    103          0xF0,0xE0,0x01,0x03,0x07,0x07,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
    104          0x8E,0x9F,0xBF,0xBF,0xBF,0x9F,0x8E,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
    105          0x80
    106          };
    107          
    108          /**************************************************************
    109           *
    110           *  the  picture of wifi_1 label 
    111           *
    112           ****************************************************************/

   \                                 In  segment XDATA_ROM_C, align 1
    113          const uint8 WiFi_1[81] =
   \                     WiFi_1:
   \   000000   00           DB 0
   \   000001   00           DB 0
   \   000002   00           DB 0
   \   000003   00           DB 0
   \   000004   00           DB 0
   \   000005   00           DB 0
   \   000006   00           DB 0
   \   000007   00           DB 0
   \   000008   00           DB 0
   \   000009   00           DB 0
   \   00000A   00           DB 0
   \   00000B   00           DB 0
   \   00000C   00           DB 0
   \   00000D   00           DB 0
   \   00000E   00           DB 0
   \   00000F   00           DB 0
   \   000010   00           DB 0
   \   000011   00           DB 0
   \   000012   00           DB 0
   \   000013   00           DB 0
   \   000014   00           DB 0
   \   000015   00           DB 0
   \   000016   00           DB 0
   \   000017   00           DB 0
   \   000018   00           DB 0
   \   000019   00           DB 0
   \   00001A   00           DB 0
   \   00001B   00           DB 0
   \   00001C   00           DB 0
   \   00001D   00           DB 0
   \   00001E   00           DB 0
   \   00001F   E0           DB 224
   \   000020   F0           DB 240
   \   000021   78           DB 120
   \   000022   3C           DB 60
   \   000023   1E           DB 30
   \   000024   0E           DB 14
   \   000025   0F           DB 15
   \   000026   07           DB 7
   \   000027   87           DB 135
   \   000028   87           DB 135
   \   000029   87           DB 135
   \   00002A   07           DB 7
   \   00002B   0F           DB 15
   \   00002C   0E           DB 14
   \   00002D   1E           DB 30
   \   00002E   3C           DB 60
   \   00002F   78           DB 120
   \   000030   F0           DB 240
   \   000031   E0           DB 224
   \   000032   00           DB 0
   \   000033   00           DB 0
   \   000034   00           DB 0
   \   000035   00           DB 0
   \   000036   80           DB 128
   \   000037   80           DB 128
   \   000038   80           DB 128
   \   000039   80           DB 128
   \   00003A   80           DB 128
   \   00003B   80           DB 128
   \   00003C   80           DB 128
   \   00003D   80           DB 128
   \   00003E   80           DB 128
   \   00003F   80           DB 128
   \   000040   8E           DB 142
   \   000041   9F           DB 159
   \   000042   BF           DB 191
   \   000043   BF           DB 191
   \   000044   BF           DB 191
   \   000045   9F           DB 159
   \   000046   8E           DB 142
   \   000047   80           DB 128
   \   000048   80           DB 128
   \   000049   80           DB 128
   \   00004A   80           DB 128
   \   00004B   80           DB 128
   \   00004C   80           DB 128
   \   00004D   80           DB 128
   \   00004E   80           DB 128
   \   00004F   80           DB 128
   \   000050   00           DB 0
    114          {
    115          /*--  µ˜»Î¡À“ª∑˘ÕºœÒ£∫C:\Users\William\Desktop\mode\WIFIMOD1.bmp  --*/
    116          /*--  øÌ∂»x∏ﬂ∂»=27x24  --*/
    117          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    118          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,
    119          0xF0,0x78,0x3C,0x1E,0x0E,0x0F,0x07,0x87,0x87,0x87,0x07,0x0F,0x0E,0x1E,0x3C,0x78,
    120          0xF0,0xE0,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
    121          0x8E,0x9F,0xBF,0xBF,0xBF,0x9F,0x8E,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
    122          };
    123          
    124          /**************************************************************
    125           *
    126           *  the  picture of wifi_2 label 
    127           *
    128           ****************************************************************/

   \                                 In  segment XDATA_ROM_C, align 1
    129          const uint8 WiFi_2[81] =
   \                     WiFi_2:
   \   000000   00           DB 0
   \   000001   00           DB 0
   \   000002   00           DB 0
   \   000003   00           DB 0
   \   000004   00           DB 0
   \   000005   00           DB 0
   \   000006   00           DB 0
   \   000007   00           DB 0
   \   000008   00           DB 0
   \   000009   00           DB 0
   \   00000A   00           DB 0
   \   00000B   00           DB 0
   \   00000C   00           DB 0
   \   00000D   00           DB 0
   \   00000E   00           DB 0
   \   00000F   00           DB 0
   \   000010   00           DB 0
   \   000011   00           DB 0
   \   000012   00           DB 0
   \   000013   00           DB 0
   \   000014   00           DB 0
   \   000015   00           DB 0
   \   000016   00           DB 0
   \   000017   00           DB 0
   \   000018   00           DB 0
   \   000019   00           DB 0
   \   00001A   00           DB 0
   \   00001B   00           DB 0
   \   00001C   00           DB 0
   \   00001D   00           DB 0
   \   00001E   00           DB 0
   \   00001F   00           DB 0
   \   000020   00           DB 0
   \   000021   00           DB 0
   \   000022   00           DB 0
   \   000023   00           DB 0
   \   000024   00           DB 0
   \   000025   00           DB 0
   \   000026   00           DB 0
   \   000027   80           DB 128
   \   000028   80           DB 128
   \   000029   80           DB 128
   \   00002A   00           DB 0
   \   00002B   00           DB 0
   \   00002C   00           DB 0
   \   00002D   00           DB 0
   \   00002E   00           DB 0
   \   00002F   00           DB 0
   \   000030   00           DB 0
   \   000031   00           DB 0
   \   000032   00           DB 0
   \   000033   00           DB 0
   \   000034   00           DB 0
   \   000035   00           DB 0
   \   000036   80           DB 128
   \   000037   80           DB 128
   \   000038   80           DB 128
   \   000039   80           DB 128
   \   00003A   80           DB 128
   \   00003B   80           DB 128
   \   00003C   80           DB 128
   \   00003D   80           DB 128
   \   00003E   80           DB 128
   \   00003F   80           DB 128
   \   000040   8E           DB 142
   \   000041   9F           DB 159
   \   000042   BF           DB 191
   \   000043   BF           DB 191
   \   000044   BF           DB 191
   \   000045   9F           DB 159
   \   000046   8E           DB 142
   \   000047   80           DB 128
   \   000048   80           DB 128
   \   000049   80           DB 128
   \   00004A   80           DB 128
   \   00004B   80           DB 128
   \   00004C   80           DB 128
   \   00004D   80           DB 128
   \   00004E   80           DB 128
   \   00004F   80           DB 128
   \   000050   80           DB 128
    130          {
    131          /*--  µ˜»Î¡À“ª∑˘ÕºœÒ£∫C:\Users\William\Desktop\mode\WIFIMOD2.bmp  --*/
    132          /*--  øÌ∂»x∏ﬂ∂»=27x24  --*/
    133          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    134          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    135          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,
    136          0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
    137          0x8E,0x9F,0xBF,0xBF,0xBF,0x9F,0x8E,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
    138          0x80
    139          };
    140          
    141          /**************************************************************
    142           *
    143           *  the  picture of wifi_3 label 
    144           *
    145           ****************************************************************/

   \                                 In  segment XDATA_ROM_C, align 1
    146          const uint8 WiFi_3[81] =
   \                     WiFi_3:
   \   000000   00           DB 0
   \   000001   00           DB 0
   \   000002   08           DB 8
   \   000003   18           DB 24
   \   000004   38           DB 56
   \   000005   78           DB 120
   \   000006   F8           DB 248
   \   000007   F8           DB 248
   \   000008   F8           DB 248
   \   000009   F8           DB 248
   \   00000A   F8           DB 248
   \   00000B   78           DB 120
   \   00000C   38           DB 56
   \   00000D   18           DB 24
   \   00000E   08           DB 8
   \   00000F   00           DB 0
   \   000010   00           DB 0
   \   000011   00           DB 0
   \   000012   00           DB 0
   \   000013   00           DB 0
   \   000014   00           DB 0
   \   000015   00           DB 0
   \   000016   00           DB 0
   \   000017   00           DB 0
   \   000018   00           DB 0
   \   000019   00           DB 0
   \   00001A   00           DB 0
   \   00001B   00           DB 0
   \   00001C   00           DB 0
   \   00001D   00           DB 0
   \   00001E   00           DB 0
   \   00001F   00           DB 0
   \   000020   00           DB 0
   \   000021   00           DB 0
   \   000022   01           DB 1
   \   000023   FF           DB 255
   \   000024   01           DB 1
   \   000025   00           DB 0
   \   000026   00           DB 0
   \   000027   00           DB 0
   \   000028   60           DB 96
   \   000029   E0           DB 224
   \   00002A   C0           DB 192
   \   00002B   80           DB 128
   \   00002C   00           DB 0
   \   00002D   80           DB 128
   \   00002E   C0           DB 192
   \   00002F   E0           DB 224
   \   000030   60           DB 96
   \   000031   00           DB 0
   \   000032   00           DB 0
   \   000033   00           DB 0
   \   000034   00           DB 0
   \   000035   00           DB 0
   \   000036   80           DB 128
   \   000037   80           DB 128
   \   000038   80           DB 128
   \   000039   80           DB 128
   \   00003A   80           DB 128
   \   00003B   80           DB 128
   \   00003C   80           DB 128
   \   00003D   80           DB 128
   \   00003E   BF           DB 191
   \   00003F   80           DB 128
   \   000040   80           DB 128
   \   000041   80           DB 128
   \   000042   80           DB 128
   \   000043   B0           DB 176
   \   000044   B8           DB 184
   \   000045   9D           DB 157
   \   000046   8F           DB 143
   \   000047   87           DB 135
   \   000048   8F           DB 143
   \   000049   9D           DB 157
   \   00004A   B8           DB 184
   \   00004B   B0           DB 176
   \   00004C   80           DB 128
   \   00004D   80           DB 128
   \   00004E   80           DB 128
   \   00004F   80           DB 128
   \   000050   80           DB 128
    147          {
    148          /*--  µ˜»Î¡À“ª∑˘ÕºœÒ£∫C:\Users\William\Desktop\mode\WIFIMOD3.bmp  --*/
    149          /*--  øÌ∂»x∏ﬂ∂»=27x24  --*/
    150          0x00,0x00,0x08,0x18,0x38,0x78,0xF8,0xF8,0xF8,0xF8,0xF8,0x78,0x38,0x18,0x08,0x00,
    151          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    152          0x00,0x00,0x01,0xFF,0x01,0x00,0x00,0x00,0x60,0xE0,0xC0,0x80,0x00,0x80,0xC0,0xE0,
    153          0x60,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0xBF,0x80,
    154          0x80,0x80,0x80,0xB0,0xB8,0x9D,0x8F,0x87,0x8F,0x9D,0xB8,0xB0,0x80,0x80,0x80,0x80,
    155          0x80
    156          };
    157          
    158          /**************************************************************
    159           *
    160           *  the  picture of enddevice mode label 
    161           *
    162           ****************************************************************/

   \                                 In  segment XDATA_ROM_C, align 1
    163          const uint8 Auto[60] = 
   \                     Auto:
   \   000000   F8           DB 248
   \   000001   88           DB 136
   \   000002   88           DB 136
   \   000003   88           DB 136
   \   000004   88           DB 136
   \   000005   F8           DB 248
   \   000006   00           DB 0
   \   000007   00           DB 0
   \   000008   F8           DB 248
   \   000009   00           DB 0
   \   00000A   00           DB 0
   \   00000B   00           DB 0
   \   00000C   00           DB 0
   \   00000D   F8           DB 248
   \   00000E   00           DB 0
   \   00000F   00           DB 0
   \   000010   00           DB 0
   \   000011   08           DB 8
   \   000012   08           DB 8
   \   000013   F8           DB 248
   \   000014   08           DB 8
   \   000015   08           DB 8
   \   000016   00           DB 0
   \   000017   00           DB 0
   \   000018   F8           DB 248
   \   000019   08           DB 8
   \   00001A   08           DB 8
   \   00001B   08           DB 8
   \   00001C   08           DB 8
   \   00001D   F0           DB 240
   \   00001E   1F           DB 31
   \   00001F   00           DB 0
   \   000020   00           DB 0
   \   000021   00           DB 0
   \   000022   00           DB 0
   \   000023   1F           DB 31
   \   000024   00           DB 0
   \   000025   00           DB 0
   \   000026   0F           DB 15
   \   000027   10           DB 16
   \   000028   10           DB 16
   \   000029   10           DB 16
   \   00002A   10           DB 16
   \   00002B   0F           DB 15
   \   00002C   00           DB 0
   \   00002D   00           DB 0
   \   00002E   00           DB 0
   \   00002F   00           DB 0
   \   000030   00           DB 0
   \   000031   1F           DB 31
   \   000032   00           DB 0
   \   000033   00           DB 0
   \   000034   00           DB 0
   \   000035   00           DB 0
   \   000036   0F           DB 15
   \   000037   10           DB 16
   \   000038   10           DB 16
   \   000039   10           DB 16
   \   00003A   10           DB 16
   \   00003B   0F           DB 15
    164          {
    165          /*--  µ˜»Î¡À“ª∑˘ÕºœÒ£∫C:\Users\William\Desktop\mode\AUTOMOD.bmp  --*/
    166          /*--  øÌ∂»x∏ﬂ∂»=30x16  --*/
    167          0xF8,0x88,0x88,0x88,0x88,0xF8,0x00,0x00,0xF8,0x00,0x00,0x00,0x00,0xF8,0x00,0x00,
    168          0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0x00,0xF8,0x08,0x08,0x08,0x08,0xF0,0x1F,0x00,
    169          0x00,0x00,0x00,0x1F,0x00,0x00,0x0F,0x10,0x10,0x10,0x10,0x0F,0x00,0x00,0x00,0x00,
    170          0x00,0x1F,0x00,0x00,0x00,0x00,0x0F,0x10,0x10,0x10,0x10,0x0F
    171          };
    172          
    173          
    174          /**************************************************************
    175           *
    176           *  the  picture of temperature mod label 
    177           *
    178           ****************************************************************/

   \                                 In  segment XDATA_ROM_C, align 1
    179          const uint8 RT[51] = 
   \                     RT:
   \   000000   E0           DB 224
   \   000001   20           DB 32
   \   000002   20           DB 32
   \   000003   20           DB 32
   \   000004   20           DB 32
   \   000005   20           DB 32
   \   000006   20           DB 32
   \   000007   E0           DB 224
   \   000008   00           DB 0
   \   000009   00           DB 0
   \   00000A   20           DB 32
   \   00000B   20           DB 32
   \   00000C   20           DB 32
   \   00000D   E0           DB 224
   \   00000E   20           DB 32
   \   00000F   20           DB 32
   \   000010   20           DB 32
   \   000011   FF           DB 255
   \   000012   08           DB 8
   \   000013   18           DB 24
   \   000014   38           DB 56
   \   000015   68           DB 104
   \   000016   C8           DB 200
   \   000017   88           DB 136
   \   000018   07           DB 7
   \   000019   00           DB 0
   \   00001A   00           DB 0
   \   00001B   00           DB 0
   \   00001C   00           DB 0
   \   00001D   00           DB 0
   \   00001E   FF           DB 255
   \   00001F   00           DB 0
   \   000020   00           DB 0
   \   000021   00           DB 0
   \   000022   03           DB 3
   \   000023   00           DB 0
   \   000024   00           DB 0
   \   000025   00           DB 0
   \   000026   00           DB 0
   \   000027   00           DB 0
   \   000028   01           DB 1
   \   000029   03           DB 3
   \   00002A   00           DB 0
   \   00002B   00           DB 0
   \   00002C   00           DB 0
   \   00002D   00           DB 0
   \   00002E   00           DB 0
   \   00002F   03           DB 3
   \   000030   00           DB 0
   \   000031   00           DB 0
   \   000032   00           DB 0
    180          {
    181          /*--  µ˜»Î¡À“ª∑˘ÕºœÒ£∫C:\Users\William\Desktop\mode\RTMOD.bmp  --*/
    182          /*--  øÌ∂»x∏ﬂ∂»=17x24  --*/
    183          0xE0,0x20,0x20,0x20,0x20,0x20,0x20,0xE0,0x00,0x00,0x20,0x20,0x20,0xE0,0x20,0x20,
    184          0x20,0xFF,0x08,0x18,0x38,0x68,0xC8,0x88,0x07,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,
    185          0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x01,0x03,0x00,0x00,0x00,0x00,0x00,0x03,
    186          0x00,0x00,0x00 
    187          };
    188          
    189          /**************************************************************
    190           *
    191           *  the  picture of temperature mod label 
    192           *
    193           ****************************************************************/

   \                                 In  segment XDATA_ROM_C, align 1
    194          const uint8 FT[51] = 
   \                     FT:
   \   000000   E0           DB 224
   \   000001   20           DB 32
   \   000002   20           DB 32
   \   000003   20           DB 32
   \   000004   20           DB 32
   \   000005   20           DB 32
   \   000006   20           DB 32
   \   000007   00           DB 0
   \   000008   00           DB 0
   \   000009   00           DB 0
   \   00000A   20           DB 32
   \   00000B   20           DB 32
   \   00000C   20           DB 32
   \   00000D   E0           DB 224
   \   00000E   20           DB 32
   \   00000F   20           DB 32
   \   000010   20           DB 32
   \   000011   F7           DB 247
   \   000012   08           DB 8
   \   000013   08           DB 8
   \   000014   08           DB 8
   \   000015   08           DB 8
   \   000016   08           DB 8
   \   000017   08           DB 8
   \   000018   00           DB 0
   \   000019   00           DB 0
   \   00001A   00           DB 0
   \   00001B   00           DB 0
   \   00001C   00           DB 0
   \   00001D   00           DB 0
   \   00001E   FF           DB 255
   \   00001F   00           DB 0
   \   000020   00           DB 0
   \   000021   00           DB 0
   \   000022   03           DB 3
   \   000023   00           DB 0
   \   000024   00           DB 0
   \   000025   00           DB 0
   \   000026   00           DB 0
   \   000027   00           DB 0
   \   000028   00           DB 0
   \   000029   00           DB 0
   \   00002A   00           DB 0
   \   00002B   00           DB 0
   \   00002C   00           DB 0
   \   00002D   00           DB 0
   \   00002E   00           DB 0
   \   00002F   03           DB 3
   \   000030   00           DB 0
   \   000031   00           DB 0
   \   000032   00           DB 0
    195          {
    196          /*--  µ˜»Î¡À“ª∑˘ÕºœÒ£∫C:\Users\William\Desktop\mode\FTMOD.bmp  --*/
    197          /*--  øÌ∂»x∏ﬂ∂»=17x24  --*/
    198          0xE0,0x20,0x20,0x20,0x20,0x20,0x20,0x00,0x00,0x00,0x20,0x20,0x20,0xE0,0x20,0x20,
    199          0x20,0xF7,0x08,0x08,0x08,0x08,0x08,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,
    200          0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,
    201          0x00,0x00,0x00
    202          };
    203          
    204          /**************************************************************
    205           *
    206           *  the  picture of relay state label 
    207           *
    208           ****************************************************************/

   \                                 In  segment XDATA_ROM_C, align 1
    209          const uint8 Arrow[33] = 
   \                     Arrow:
   \   000000   00           DB 0
   \   000001   00           DB 0
   \   000002   00           DB 0
   \   000003   00           DB 0
   \   000004   80           DB 128
   \   000005   C0           DB 192
   \   000006   80           DB 128
   \   000007   00           DB 0
   \   000008   00           DB 0
   \   000009   00           DB 0
   \   00000A   00           DB 0
   \   00000B   08           DB 8
   \   00000C   0C           DB 12
   \   00000D   8E           DB 142
   \   00000E   CF           DB 207
   \   00000F   EF           DB 239
   \   000010   FF           DB 255
   \   000011   EF           DB 239
   \   000012   CF           DB 207
   \   000013   8E           DB 142
   \   000014   0C           DB 12
   \   000015   08           DB 8
   \   000016   02           DB 2
   \   000017   03           DB 3
   \   000018   03           DB 3
   \   000019   03           DB 3
   \   00001A   03           DB 3
   \   00001B   03           DB 3
   \   00001C   03           DB 3
   \   00001D   03           DB 3
   \   00001E   03           DB 3
   \   00001F   03           DB 3
   \   000020   02           DB 2
    210          {
    211          /*--  µ˜»Î¡À“ª∑˘ÕºœÒ£∫C:\Users\William\Desktop\mode\arrow.bmp  --*/
    212          /*--  øÌ∂»x∏ﬂ∂»=11x24  --*/
    213          0x00,0x00,0x00,0x00,0x80,0xC0,0x80,0x00,0x00,0x00,0x00,0x08,0x0C,0x8E,0xCF,0xEF,
    214          0xFF,0xEF,0xCF,0x8E,0x0C,0x08,0x02,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,
    215          0x02
    216          };
    217          
    218          
    219          /**************************************************************
    220           *
    221           *  the  code of set temperature number  
    222           *
    223           ****************************************************************/

   \                                 In  segment XDATA_ROM_C, align 1
    224          const uint8 STCODE[360] = 
   \                     STCODE:
   \   000000   FE           DB 254
   \   000001   FE           DB 254
   \   000002   06           DB 6
   \   000003   06           DB 6
   \   000004   06           DB 6
   \   000005   06           DB 6
   \   000006   06           DB 6
   \   000007   06           DB 6
   \   000008   06           DB 6
   \   000009   06           DB 6
   \   00000A   FA           DB 250
   \   00000B   FE           DB 254
   \   00000C   FB           DB 251
   \   00000D   F1           DB 241
   \   00000E   00           DB 0
   \   00000F   00           DB 0
   \   000010   00           DB 0
   \   000011   00           DB 0
   \   000012   00           DB 0
   \   000013   00           DB 0
   \   000014   00           DB 0
   \   000015   00           DB 0
   \   000016   F3           DB 243
   \   000017   FB           DB 251
   \   000018   9F           DB 159
   \   000019   97           DB 151
   \   00001A   98           DB 152
   \   00001B   98           DB 152
   \   00001C   98           DB 152
   \   00001D   98           DB 152
   \   00001E   98           DB 152
   \   00001F   98           DB 152
   \   000020   98           DB 152
   \   000021   98           DB 152
   \   000022   93           DB 147
   \   000023   9F           DB 159
   \   000024   00           DB 0
   \   000025   00           DB 0
   \   000026   00           DB 0
   \   000027   00           DB 0
   \   000028   00           DB 0
   \   000029   00           DB 0
   \   00002A   00           DB 0
   \   00002B   00           DB 0
   \   00002C   00           DB 0
   \   00002D   00           DB 0
   \   00002E   FC           DB 252
   \   00002F   FE           DB 254
   \   000030   00           DB 0
   \   000031   00           DB 0
   \   000032   00           DB 0
   \   000033   00           DB 0
   \   000034   00           DB 0
   \   000035   00           DB 0
   \   000036   00           DB 0
   \   000037   00           DB 0
   \   000038   00           DB 0
   \   000039   00           DB 0
   \   00003A   F1           DB 241
   \   00003B   FB           DB 251
   \   00003C   80           DB 128
   \   00003D   80           DB 128
   \   00003E   80           DB 128
   \   00003F   80           DB 128
   \   000040   80           DB 128
   \   000041   80           DB 128
   \   000042   80           DB 128
   \   000043   80           DB 128
   \   000044   80           DB 128
   \   000045   80           DB 128
   \   000046   87           DB 135
   \   000047   9F           DB 159
   \   000048   00           DB 0
   \   000049   02           DB 2
   \   00004A   06           DB 6
   \   00004B   06           DB 6
   \   00004C   06           DB 6
   \   00004D   06           DB 6
   \   00004E   06           DB 6
   \   00004F   06           DB 6
   \   000050   06           DB 6
   \   000051   06           DB 6
   \   000052   FA           DB 250
   \   000053   FE           DB 254
   \   000054   F8           DB 248
   \   000055   F8           DB 248
   \   000056   0C           DB 12
   \   000057   0C           DB 12
   \   000058   0C           DB 12
   \   000059   0C           DB 12
   \   00005A   0C           DB 12
   \   00005B   0C           DB 12
   \   00005C   0C           DB 12
   \   00005D   0C           DB 12
   \   00005E   0F           DB 15
   \   00005F   03           DB 3
   \   000060   87           DB 135
   \   000061   93           DB 147
   \   000062   98           DB 152
   \   000063   98           DB 152
   \   000064   98           DB 152
   \   000065   98           DB 152
   \   000066   98           DB 152
   \   000067   98           DB 152
   \   000068   98           DB 152
   \   000069   98           DB 152
   \   00006A   90           DB 144
   \   00006B   80           DB 128
   \   00006C   02           DB 2
   \   00006D   06           DB 6
   \   00006E   06           DB 6
   \   00006F   06           DB 6
   \   000070   06           DB 6
   \   000071   06           DB 6
   \   000072   06           DB 6
   \   000073   06           DB 6
   \   000074   06           DB 6
   \   000075   06           DB 6
   \   000076   FE           DB 254
   \   000077   FE           DB 254
   \   000078   0C           DB 12
   \   000079   0C           DB 12
   \   00007A   0C           DB 12
   \   00007B   0C           DB 12
   \   00007C   0C           DB 12
   \   00007D   0C           DB 12
   \   00007E   0C           DB 12
   \   00007F   0C           DB 12
   \   000080   0C           DB 12
   \   000081   0C           DB 12
   \   000082   F1           DB 241
   \   000083   FB           DB 251
   \   000084   90           DB 144
   \   000085   98           DB 152
   \   000086   98           DB 152
   \   000087   98           DB 152
   \   000088   98           DB 152
   \   000089   98           DB 152
   \   00008A   98           DB 152
   \   00008B   98           DB 152
   \   00008C   98           DB 152
   \   00008D   98           DB 152
   \   00008E   93           DB 147
   \   00008F   87           DB 135
   \   000090   FE           DB 254
   \   000091   FC           DB 252
   \   000092   00           DB 0
   \   000093   00           DB 0
   \   000094   00           DB 0
   \   000095   00           DB 0
   \   000096   00           DB 0
   \   000097   00           DB 0
   \   000098   00           DB 0
   \   000099   00           DB 0
   \   00009A   FC           DB 252
   \   00009B   FE           DB 254
   \   00009C   03           DB 3
   \   00009D   01           DB 1
   \   00009E   0C           DB 12
   \   00009F   0C           DB 12
   \   0000A0   0C           DB 12
   \   0000A1   0C           DB 12
   \   0000A2   0C           DB 12
   \   0000A3   0C           DB 12
   \   0000A4   0C           DB 12
   \   0000A5   0C           DB 12
   \   0000A6   FD           DB 253
   \   0000A7   FB           DB 251
   \   0000A8   80           DB 128
   \   0000A9   80           DB 128
   \   0000AA   80           DB 128
   \   0000AB   80           DB 128
   \   0000AC   80           DB 128
   \   0000AD   80           DB 128
   \   0000AE   80           DB 128
   \   0000AF   80           DB 128
   \   0000B0   80           DB 128
   \   0000B1   80           DB 128
   \   0000B2   87           DB 135
   \   0000B3   9F           DB 159
   \   0000B4   FE           DB 254
   \   0000B5   FA           DB 250
   \   0000B6   06           DB 6
   \   0000B7   06           DB 6
   \   0000B8   06           DB 6
   \   0000B9   06           DB 6
   \   0000BA   06           DB 6
   \   0000BB   06           DB 6
   \   0000BC   06           DB 6
   \   0000BD   06           DB 6
   \   0000BE   02           DB 2
   \   0000BF   00           DB 0
   \   0000C0   03           DB 3
   \   0000C1   03           DB 3
   \   0000C2   0C           DB 12
   \   0000C3   0C           DB 12
   \   0000C4   0C           DB 12
   \   0000C5   0C           DB 12
   \   0000C6   0C           DB 12
   \   0000C7   0C           DB 12
   \   0000C8   0C           DB 12
   \   0000C9   0C           DB 12
   \   0000CA   FC           DB 252
   \   0000CB   F8           DB 248
   \   0000CC   80           DB 128
   \   0000CD   90           DB 144
   \   0000CE   98           DB 152
   \   0000CF   98           DB 152
   \   0000D0   98           DB 152
   \   0000D1   98           DB 152
   \   0000D2   98           DB 152
   \   0000D3   98           DB 152
   \   0000D4   98           DB 152
   \   0000D5   98           DB 152
   \   0000D6   93           DB 147
   \   0000D7   87           DB 135
   \   0000D8   FE           DB 254
   \   0000D9   FE           DB 254
   \   0000DA   06           DB 6
   \   0000DB   06           DB 6
   \   0000DC   06           DB 6
   \   0000DD   06           DB 6
   \   0000DE   06           DB 6
   \   0000DF   06           DB 6
   \   0000E0   06           DB 6
   \   0000E1   06           DB 6
   \   0000E2   02           DB 2
   \   0000E3   00           DB 0
   \   0000E4   FF           DB 255
   \   0000E5   F9           DB 249
   \   0000E6   0C           DB 12
   \   0000E7   0C           DB 12
   \   0000E8   0C           DB 12
   \   0000E9   0C           DB 12
   \   0000EA   0C           DB 12
   \   0000EB   0C           DB 12
   \   0000EC   0C           DB 12
   \   0000ED   0C           DB 12
   \   0000EE   FC           DB 252
   \   0000EF   F8           DB 248
   \   0000F0   87           DB 135
   \   0000F1   93           DB 147
   \   0000F2   98           DB 152
   \   0000F3   98           DB 152
   \   0000F4   98           DB 152
   \   0000F5   98           DB 152
   \   0000F6   98           DB 152
   \   0000F7   98           DB 152
   \   0000F8   98           DB 152
   \   0000F9   98           DB 152
   \   0000FA   97           DB 151
   \   0000FB   9F           DB 159
   \   0000FC   02           DB 2
   \   0000FD   02           DB 2
   \   0000FE   06           DB 6
   \   0000FF   06           DB 6
   \   000100   06           DB 6
   \   000101   06           DB 6
   \   000102   06           DB 6
   \   000103   06           DB 6
   \   000104   06           DB 6
   \   000105   06           DB 6
   \   000106   FE           DB 254
   \   000107   FE           DB 254
   \   000108   00           DB 0
   \   000109   00           DB 0
   \   00010A   00           DB 0
   \   00010B   00           DB 0
   \   00010C   00           DB 0
   \   00010D   00           DB 0
   \   00010E   00           DB 0
   \   00010F   00           DB 0
   \   000110   00           DB 0
   \   000111   00           DB 0
   \   000112   F1           DB 241
   \   000113   FB           DB 251
   \   000114   80           DB 128
   \   000115   80           DB 128
   \   000116   80           DB 128
   \   000117   80           DB 128
   \   000118   80           DB 128
   \   000119   80           DB 128
   \   00011A   80           DB 128
   \   00011B   80           DB 128
   \   00011C   80           DB 128
   \   00011D   80           DB 128
   \   00011E   87           DB 135
   \   00011F   9F           DB 159
   \   000120   FE           DB 254
   \   000121   FE           DB 254
   \   000122   06           DB 6
   \   000123   06           DB 6
   \   000124   06           DB 6
   \   000125   06           DB 6
   \   000126   06           DB 6
   \   000127   06           DB 6
   \   000128   06           DB 6
   \   000129   06           DB 6
   \   00012A   FA           DB 250
   \   00012B   FE           DB 254
   \   00012C   FB           DB 251
   \   00012D   F9           DB 249
   \   00012E   0C           DB 12
   \   00012F   0C           DB 12
   \   000130   0C           DB 12
   \   000131   0C           DB 12
   \   000132   0C           DB 12
   \   000133   0C           DB 12
   \   000134   0C           DB 12
   \   000135   0C           DB 12
   \   000136   FF           DB 255
   \   000137   FB           DB 251
   \   000138   87           DB 135
   \   000139   93           DB 147
   \   00013A   98           DB 152
   \   00013B   98           DB 152
   \   00013C   98           DB 152
   \   00013D   98           DB 152
   \   00013E   98           DB 152
   \   00013F   98           DB 152
   \   000140   98           DB 152
   \   000141   98           DB 152
   \   000142   97           DB 151
   \   000143   9F           DB 159
   \   000144   FE           DB 254
   \   000145   FE           DB 254
   \   000146   06           DB 6
   \   000147   06           DB 6
   \   000148   06           DB 6
   \   000149   06           DB 6
   \   00014A   06           DB 6
   \   00014B   06           DB 6
   \   00014C   06           DB 6
   \   00014D   06           DB 6
   \   00014E   FE           DB 254
   \   00014F   FE           DB 254
   \   000150   03           DB 3
   \   000151   01           DB 1
   \   000152   0C           DB 12
   \   000153   0C           DB 12
   \   000154   0C           DB 12
   \   000155   0C           DB 12
   \   000156   0C           DB 12
   \   000157   0C           DB 12
   \   000158   0C           DB 12
   \   000159   0C           DB 12
   \   00015A   FD           DB 253
   \   00015B   FF           DB 255
   \   00015C   80           DB 128
   \   00015D   90           DB 144
   \   00015E   98           DB 152
   \   00015F   98           DB 152
   \   000160   98           DB 152
   \   000161   98           DB 152
   \   000162   98           DB 152
   \   000163   98           DB 152
   \   000164   98           DB 152
   \   000165   98           DB 152
   \   000166   9B           DB 155
   \   000167   9F           DB 159
    225          {
    226            /*--  µ˜»Î¡À“ª∑˘ÕºœÒ£∫C:\Users\William\Desktop\mode\ST0MOD.bmp  --*/
    227          /*--  øÌ∂»x∏ﬂ∂»=12x24  --*/
    228          0xFE,0xFE,0x06,0x06,0x06,0x06,0x06,0x06,0x06,0x06,0xFA,0xFE,0xFB,0xF1,0x00,0x00,
    229          0x00,0x00,0x00,0x00,0x00,0x00,0xF3,0xFB,0x9F,0x97,0x98,0x98,0x98,0x98,0x98,0x98,
    230          0x98,0x98,0x93,0x9F,
    231          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFC,0xFE,0x00,0x00,0x00,0x00,
    232          0x00,0x00,0x00,0x00,0x00,0x00,0xF1,0xFB,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
    233          0x80,0x80,0x87,0x9F,
    234          0x00,0x02,0x06,0x06,0x06,0x06,0x06,0x06,0x06,0x06,0xFA,0xFE,0xF8,0xF8,0x0C,0x0C,
    235          0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0F,0x03,0x87,0x93,0x98,0x98,0x98,0x98,0x98,0x98,
    236          0x98,0x98,0x90,0x80,
    237          0x02,0x06,0x06,0x06,0x06,0x06,0x06,0x06,0x06,0x06,0xFE,0xFE,0x0C,0x0C,0x0C,0x0C,
    238          0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0xF1,0xFB,0x90,0x98,0x98,0x98,0x98,0x98,0x98,0x98,
    239          0x98,0x98,0x93,0x87,
    240          0xFE,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFC,0xFE,0x03,0x01,0x0C,0x0C,
    241          0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0xFD,0xFB,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
    242          0x80,0x80,0x87,0x9F,
    243          0xFE,0xFA,0x06,0x06,0x06,0x06,0x06,0x06,0x06,0x06,0x02,0x00,0x03,0x03,0x0C,0x0C,
    244          0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0xFC,0xF8,0x80,0x90,0x98,0x98,0x98,0x98,0x98,0x98,
    245          0x98,0x98,0x93,0x87,
    246          0xFE,0xFE,0x06,0x06,0x06,0x06,0x06,0x06,0x06,0x06,0x02,0x00,0xFF,0xF9,0x0C,0x0C,
    247          0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0xFC,0xF8,0x87,0x93,0x98,0x98,0x98,0x98,0x98,0x98,
    248          0x98,0x98,0x97,0x9F,
    249          0x02,0x02,0x06,0x06,0x06,0x06,0x06,0x06,0x06,0x06,0xFE,0xFE,0x00,0x00,0x00,0x00,
    250          0x00,0x00,0x00,0x00,0x00,0x00,0xF1,0xFB,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
    251          0x80,0x80,0x87,0x9F,
    252          0xFE,0xFE,0x06,0x06,0x06,0x06,0x06,0x06,0x06,0x06,0xFA,0xFE,0xFB,0xF9,0x0C,0x0C,
    253          0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0xFF,0xFB,0x87,0x93,0x98,0x98,0x98,0x98,0x98,0x98,
    254          0x98,0x98,0x97,0x9F,
    255          0xFE,0xFE,0x06,0x06,0x06,0x06,0x06,0x06,0x06,0x06,0xFE,0xFE,0x03,0x01,0x0C,0x0C,
    256          0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0xFD,0xFF,0x80,0x90,0x98,0x98,0x98,0x98,0x98,0x98,
    257          0x98,0x98,0x9B,0x9F
    258          };
    259          
    260          /**************************************************************
    261           *
    262           *  the  code of real temperature number  
    263           *
    264           ****************************************************************/

   \                                 In  segment XDATA_ROM_C, align 1
    265          const uint8 RTCODE[850] = 
   \                     RTCODE:
   \   000000   C0           DB 192
   \   000001   A0           DB 160
   \   000002   60           DB 96
   \   000003   E0           DB 224
   \   000004   E0           DB 224
   \   000005   E0           DB 224
   \   000006   E0           DB 224
   \   000007   E0           DB 224
   \   000008   E0           DB 224
   \   000009   E0           DB 224
   \   00000A   E0           DB 224
   \   00000B   E0           DB 224
   \   00000C   E0           DB 224
   \   00000D   E0           DB 224
   \   00000E   60           DB 96
   \   00000F   A0           DB 160
   \   000010   C0           DB 192
   \   000011   FF           DB 255
   \   000012   FF           DB 255
   \   000013   FF           DB 255
   \   000014   00           DB 0
   \   000015   00           DB 0
   \   000016   00           DB 0
   \   000017   00           DB 0
   \   000018   00           DB 0
   \   000019   00           DB 0
   \   00001A   00           DB 0
   \   00001B   00           DB 0
   \   00001C   00           DB 0
   \   00001D   00           DB 0
   \   00001E   00           DB 0
   \   00001F   FE           DB 254
   \   000020   FF           DB 255
   \   000021   FF           DB 255
   \   000022   E3           DB 227
   \   000023   F7           DB 247
   \   000024   E3           DB 227
   \   000025   00           DB 0
   \   000026   00           DB 0
   \   000027   00           DB 0
   \   000028   00           DB 0
   \   000029   00           DB 0
   \   00002A   00           DB 0
   \   00002B   00           DB 0
   \   00002C   00           DB 0
   \   00002D   00           DB 0
   \   00002E   00           DB 0
   \   00002F   00           DB 0
   \   000030   E3           DB 227
   \   000031   F7           DB 247
   \   000032   E3           DB 227
   \   000033   FF           DB 255
   \   000034   FF           DB 255
   \   000035   7F           DB 127
   \   000036   80           DB 128
   \   000037   80           DB 128
   \   000038   80           DB 128
   \   000039   80           DB 128
   \   00003A   80           DB 128
   \   00003B   80           DB 128
   \   00003C   80           DB 128
   \   00003D   80           DB 128
   \   00003E   80           DB 128
   \   00003F   80           DB 128
   \   000040   80           DB 128
   \   000041   3F           DB 63
   \   000042   7F           DB 127
   \   000043   FF           DB 255
   \   000044   01           DB 1
   \   000045   02           DB 2
   \   000046   03           DB 3
   \   000047   03           DB 3
   \   000048   03           DB 3
   \   000049   03           DB 3
   \   00004A   03           DB 3
   \   00004B   03           DB 3
   \   00004C   03           DB 3
   \   00004D   03           DB 3
   \   00004E   03           DB 3
   \   00004F   03           DB 3
   \   000050   03           DB 3
   \   000051   03           DB 3
   \   000052   03           DB 3
   \   000053   02           DB 2
   \   000054   00           DB 0
   \   000055   00           DB 0
   \   000056   00           DB 0
   \   000057   00           DB 0
   \   000058   00           DB 0
   \   000059   00           DB 0
   \   00005A   00           DB 0
   \   00005B   00           DB 0
   \   00005C   00           DB 0
   \   00005D   00           DB 0
   \   00005E   00           DB 0
   \   00005F   00           DB 0
   \   000060   00           DB 0
   \   000061   00           DB 0
   \   000062   00           DB 0
   \   000063   00           DB 0
   \   000064   C0           DB 192
   \   000065   E0           DB 224
   \   000066   00           DB 0
   \   000067   00           DB 0
   \   000068   00           DB 0
   \   000069   00           DB 0
   \   00006A   00           DB 0
   \   00006B   00           DB 0
   \   00006C   00           DB 0
   \   00006D   00           DB 0
   \   00006E   00           DB 0
   \   00006F   00           DB 0
   \   000070   00           DB 0
   \   000071   00           DB 0
   \   000072   00           DB 0
   \   000073   00           DB 0
   \   000074   FF           DB 255
   \   000075   FF           DB 255
   \   000076   FF           DB 255
   \   000077   00           DB 0
   \   000078   00           DB 0
   \   000079   00           DB 0
   \   00007A   00           DB 0
   \   00007B   00           DB 0
   \   00007C   00           DB 0
   \   00007D   00           DB 0
   \   00007E   00           DB 0
   \   00007F   00           DB 0
   \   000080   00           DB 0
   \   000081   00           DB 0
   \   000082   00           DB 0
   \   000083   00           DB 0
   \   000084   00           DB 0
   \   000085   C1           DB 193
   \   000086   F7           DB 247
   \   000087   E3           DB 227
   \   000088   00           DB 0
   \   000089   00           DB 0
   \   00008A   00           DB 0
   \   00008B   00           DB 0
   \   00008C   00           DB 0
   \   00008D   00           DB 0
   \   00008E   00           DB 0
   \   00008F   00           DB 0
   \   000090   00           DB 0
   \   000091   00           DB 0
   \   000092   00           DB 0
   \   000093   00           DB 0
   \   000094   00           DB 0
   \   000095   00           DB 0
   \   000096   7F           DB 127
   \   000097   FF           DB 255
   \   000098   FF           DB 255
   \   000099   00           DB 0
   \   00009A   00           DB 0
   \   00009B   00           DB 0
   \   00009C   00           DB 0
   \   00009D   00           DB 0
   \   00009E   00           DB 0
   \   00009F   00           DB 0
   \   0000A0   00           DB 0
   \   0000A1   00           DB 0
   \   0000A2   00           DB 0
   \   0000A3   00           DB 0
   \   0000A4   00           DB 0
   \   0000A5   00           DB 0
   \   0000A6   00           DB 0
   \   0000A7   00           DB 0
   \   0000A8   01           DB 1
   \   0000A9   03           DB 3
   \   0000AA   00           DB 0
   \   0000AB   20           DB 32
   \   0000AC   60           DB 96
   \   0000AD   E0           DB 224
   \   0000AE   E0           DB 224
   \   0000AF   E0           DB 224
   \   0000B0   E0           DB 224
   \   0000B1   E0           DB 224
   \   0000B2   E0           DB 224
   \   0000B3   E0           DB 224
   \   0000B4   E0           DB 224
   \   0000B5   E0           DB 224
   \   0000B6   E0           DB 224
   \   0000B7   E0           DB 224
   \   0000B8   60           DB 96
   \   0000B9   A0           DB 160
   \   0000BA   C0           DB 192
   \   0000BB   00           DB 0
   \   0000BC   00           DB 0
   \   0000BD   00           DB 0
   \   0000BE   00           DB 0
   \   0000BF   00           DB 0
   \   0000C0   00           DB 0
   \   0000C1   00           DB 0
   \   0000C2   00           DB 0
   \   0000C3   00           DB 0
   \   0000C4   00           DB 0
   \   0000C5   00           DB 0
   \   0000C6   00           DB 0
   \   0000C7   00           DB 0
   \   0000C8   00           DB 0
   \   0000C9   FF           DB 255
   \   0000CA   FF           DB 255
   \   0000CB   FF           DB 255
   \   0000CC   E0           DB 224
   \   0000CD   E0           DB 224
   \   0000CE   DC           DB 220
   \   0000CF   1C           DB 28
   \   0000D0   1C           DB 28
   \   0000D1   1C           DB 28
   \   0000D2   1C           DB 28
   \   0000D3   1C           DB 28
   \   0000D4   1C           DB 28
   \   0000D5   1C           DB 28
   \   0000D6   1C           DB 28
   \   0000D7   1C           DB 28
   \   0000D8   1C           DB 28
   \   0000D9   1C           DB 28
   \   0000DA   0B           DB 11
   \   0000DB   07           DB 7
   \   0000DC   03           DB 3
   \   0000DD   FF           DB 255
   \   0000DE   FF           DB 255
   \   0000DF   7F           DB 127
   \   0000E0   80           DB 128
   \   0000E1   80           DB 128
   \   0000E2   80           DB 128
   \   0000E3   80           DB 128
   \   0000E4   80           DB 128
   \   0000E5   80           DB 128
   \   0000E6   80           DB 128
   \   0000E7   80           DB 128
   \   0000E8   80           DB 128
   \   0000E9   80           DB 128
   \   0000EA   80           DB 128
   \   0000EB   00           DB 0
   \   0000EC   00           DB 0
   \   0000ED   00           DB 0
   \   0000EE   01           DB 1
   \   0000EF   02           DB 2
   \   0000F0   03           DB 3
   \   0000F1   03           DB 3
   \   0000F2   03           DB 3
   \   0000F3   03           DB 3
   \   0000F4   03           DB 3
   \   0000F5   03           DB 3
   \   0000F6   03           DB 3
   \   0000F7   03           DB 3
   \   0000F8   03           DB 3
   \   0000F9   03           DB 3
   \   0000FA   03           DB 3
   \   0000FB   03           DB 3
   \   0000FC   03           DB 3
   \   0000FD   02           DB 2
   \   0000FE   00           DB 0
   \   0000FF   20           DB 32
   \   000100   60           DB 96
   \   000101   E0           DB 224
   \   000102   E0           DB 224
   \   000103   E0           DB 224
   \   000104   E0           DB 224
   \   000105   E0           DB 224
   \   000106   E0           DB 224
   \   000107   E0           DB 224
   \   000108   E0           DB 224
   \   000109   E0           DB 224
   \   00010A   E0           DB 224
   \   00010B   E0           DB 224
   \   00010C   60           DB 96
   \   00010D   20           DB 32
   \   00010E   80           DB 128
   \   00010F   C0           DB 192
   \   000110   00           DB 0
   \   000111   00           DB 0
   \   000112   00           DB 0
   \   000113   00           DB 0
   \   000114   00           DB 0
   \   000115   00           DB 0
   \   000116   00           DB 0
   \   000117   00           DB 0
   \   000118   00           DB 0
   \   000119   00           DB 0
   \   00011A   00           DB 0
   \   00011B   00           DB 0
   \   00011C   00           DB 0
   \   00011D   00           DB 0
   \   00011E   FF           DB 255
   \   00011F   FF           DB 255
   \   000120   FF           DB 255
   \   000121   08           DB 8
   \   000122   1C           DB 28
   \   000123   1C           DB 28
   \   000124   1C           DB 28
   \   000125   1C           DB 28
   \   000126   1C           DB 28
   \   000127   1C           DB 28
   \   000128   1C           DB 28
   \   000129   1C           DB 28
   \   00012A   1C           DB 28
   \   00012B   1C           DB 28
   \   00012C   1C           DB 28
   \   00012D   1C           DB 28
   \   00012E   1C           DB 28
   \   00012F   EB           DB 235
   \   000130   F7           DB 247
   \   000131   E3           DB 227
   \   000132   00           DB 0
   \   000133   00           DB 0
   \   000134   00           DB 0
   \   000135   80           DB 128
   \   000136   80           DB 128
   \   000137   80           DB 128
   \   000138   80           DB 128
   \   000139   80           DB 128
   \   00013A   80           DB 128
   \   00013B   80           DB 128
   \   00013C   80           DB 128
   \   00013D   80           DB 128
   \   00013E   80           DB 128
   \   00013F   00           DB 0
   \   000140   3F           DB 63
   \   000141   7F           DB 127
   \   000142   FF           DB 255
   \   000143   02           DB 2
   \   000144   03           DB 3
   \   000145   03           DB 3
   \   000146   03           DB 3
   \   000147   03           DB 3
   \   000148   03           DB 3
   \   000149   03           DB 3
   \   00014A   03           DB 3
   \   00014B   03           DB 3
   \   00014C   03           DB 3
   \   00014D   03           DB 3
   \   00014E   03           DB 3
   \   00014F   03           DB 3
   \   000150   03           DB 3
   \   000151   02           DB 2
   \   000152   00           DB 0
   \   000153   00           DB 0
   \   000154   E0           DB 224
   \   000155   C0           DB 192
   \   000156   00           DB 0
   \   000157   00           DB 0
   \   000158   00           DB 0
   \   000159   00           DB 0
   \   00015A   00           DB 0
   \   00015B   00           DB 0
   \   00015C   00           DB 0
   \   00015D   00           DB 0
   \   00015E   00           DB 0
   \   00015F   00           DB 0
   \   000160   00           DB 0
   \   000161   00           DB 0
   \   000162   00           DB 0
   \   000163   C0           DB 192
   \   000164   E0           DB 224
   \   000165   FF           DB 255
   \   000166   FF           DB 255
   \   000167   FF           DB 255
   \   000168   00           DB 0
   \   000169   00           DB 0
   \   00016A   00           DB 0
   \   00016B   00           DB 0
   \   00016C   00           DB 0
   \   00016D   00           DB 0
   \   00016E   00           DB 0
   \   00016F   00           DB 0
   \   000170   00           DB 0
   \   000171   00           DB 0
   \   000172   00           DB 0
   \   000173   FF           DB 255
   \   000174   FF           DB 255
   \   000175   FF           DB 255
   \   000176   03           DB 3
   \   000177   07           DB 7
   \   000178   1D           DB 29
   \   000179   1C           DB 28
   \   00017A   1C           DB 28
   \   00017B   1C           DB 28
   \   00017C   1C           DB 28
   \   00017D   1C           DB 28
   \   00017E   1C           DB 28
   \   00017F   1C           DB 28
   \   000180   1C           DB 28
   \   000181   1C           DB 28
   \   000182   1C           DB 28
   \   000183   1C           DB 28
   \   000184   CB           DB 203
   \   000185   F7           DB 247
   \   000186   E3           DB 227
   \   000187   00           DB 0
   \   000188   00           DB 0
   \   000189   00           DB 0
   \   00018A   00           DB 0
   \   00018B   00           DB 0
   \   00018C   00           DB 0
   \   00018D   00           DB 0
   \   00018E   00           DB 0
   \   00018F   00           DB 0
   \   000190   00           DB 0
   \   000191   00           DB 0
   \   000192   00           DB 0
   \   000193   00           DB 0
   \   000194   00           DB 0
   \   000195   7F           DB 127
   \   000196   FF           DB 255
   \   000197   FF           DB 255
   \   000198   00           DB 0
   \   000199   00           DB 0
   \   00019A   00           DB 0
   \   00019B   00           DB 0
   \   00019C   00           DB 0
   \   00019D   00           DB 0
   \   00019E   00           DB 0
   \   00019F   00           DB 0
   \   0001A0   00           DB 0
   \   0001A1   00           DB 0
   \   0001A2   00           DB 0
   \   0001A3   00           DB 0
   \   0001A4   00           DB 0
   \   0001A5   00           DB 0
   \   0001A6   00           DB 0
   \   0001A7   01           DB 1
   \   0001A8   03           DB 3
   \   0001A9   C0           DB 192
   \   0001AA   A0           DB 160
   \   0001AB   60           DB 96
   \   0001AC   E0           DB 224
   \   0001AD   E0           DB 224
   \   0001AE   E0           DB 224
   \   0001AF   E0           DB 224
   \   0001B0   E0           DB 224
   \   0001B1   E0           DB 224
   \   0001B2   E0           DB 224
   \   0001B3   E0           DB 224
   \   0001B4   E0           DB 224
   \   0001B5   E0           DB 224
   \   0001B6   E0           DB 224
   \   0001B7   60           DB 96
   \   0001B8   20           DB 32
   \   0001B9   00           DB 0
   \   0001BA   FF           DB 255
   \   0001BB   FF           DB 255
   \   0001BC   FF           DB 255
   \   0001BD   00           DB 0
   \   0001BE   00           DB 0
   \   0001BF   00           DB 0
   \   0001C0   00           DB 0
   \   0001C1   00           DB 0
   \   0001C2   00           DB 0
   \   0001C3   00           DB 0
   \   0001C4   00           DB 0
   \   0001C5   00           DB 0
   \   0001C6   00           DB 0
   \   0001C7   00           DB 0
   \   0001C8   00           DB 0
   \   0001C9   00           DB 0
   \   0001CA   00           DB 0
   \   0001CB   03           DB 3
   \   0001CC   07           DB 7
   \   0001CD   1F           DB 31
   \   0001CE   1C           DB 28
   \   0001CF   1C           DB 28
   \   0001D0   1C           DB 28
   \   0001D1   1C           DB 28
   \   0001D2   1C           DB 28
   \   0001D3   1C           DB 28
   \   0001D4   1C           DB 28
   \   0001D5   1C           DB 28
   \   0001D6   1C           DB 28
   \   0001D7   1C           DB 28
   \   0001D8   1C           DB 28
   \   0001D9   C8           DB 200
   \   0001DA   E0           DB 224
   \   0001DB   E0           DB 224
   \   0001DC   00           DB 0
   \   0001DD   00           DB 0
   \   0001DE   00           DB 0
   \   0001DF   80           DB 128
   \   0001E0   80           DB 128
   \   0001E1   80           DB 128
   \   0001E2   80           DB 128
   \   0001E3   80           DB 128
   \   0001E4   80           DB 128
   \   0001E5   80           DB 128
   \   0001E6   80           DB 128
   \   0001E7   80           DB 128
   \   0001E8   80           DB 128
   \   0001E9   80           DB 128
   \   0001EA   7F           DB 127
   \   0001EB   FF           DB 255
   \   0001EC   FF           DB 255
   \   0001ED   00           DB 0
   \   0001EE   02           DB 2
   \   0001EF   03           DB 3
   \   0001F0   03           DB 3
   \   0001F1   03           DB 3
   \   0001F2   03           DB 3
   \   0001F3   03           DB 3
   \   0001F4   03           DB 3
   \   0001F5   03           DB 3
   \   0001F6   03           DB 3
   \   0001F7   03           DB 3
   \   0001F8   03           DB 3
   \   0001F9   03           DB 3
   \   0001FA   03           DB 3
   \   0001FB   03           DB 3
   \   0001FC   02           DB 2
   \   0001FD   01           DB 1
   \   0001FE   C0           DB 192
   \   0001FF   A0           DB 160
   \   000200   60           DB 96
   \   000201   E0           DB 224
   \   000202   E0           DB 224
   \   000203   E0           DB 224
   \   000204   E0           DB 224
   \   000205   E0           DB 224
   \   000206   E0           DB 224
   \   000207   E0           DB 224
   \   000208   E0           DB 224
   \   000209   E0           DB 224
   \   00020A   E0           DB 224
   \   00020B   E0           DB 224
   \   00020C   60           DB 96
   \   00020D   20           DB 32
   \   00020E   00           DB 0
   \   00020F   FF           DB 255
   \   000210   FF           DB 255
   \   000211   FF           DB 255
   \   000212   00           DB 0
   \   000213   00           DB 0
   \   000214   00           DB 0
   \   000215   00           DB 0
   \   000216   00           DB 0
   \   000217   00           DB 0
   \   000218   00           DB 0
   \   000219   00           DB 0
   \   00021A   00           DB 0
   \   00021B   00           DB 0
   \   00021C   00           DB 0
   \   00021D   00           DB 0
   \   00021E   00           DB 0
   \   00021F   00           DB 0
   \   000220   E3           DB 227
   \   000221   F7           DB 247
   \   000222   FF           DB 255
   \   000223   1C           DB 28
   \   000224   1C           DB 28
   \   000225   1C           DB 28
   \   000226   1C           DB 28
   \   000227   1C           DB 28
   \   000228   1C           DB 28
   \   000229   1C           DB 28
   \   00022A   1C           DB 28
   \   00022B   1C           DB 28
   \   00022C   1C           DB 28
   \   00022D   1C           DB 28
   \   00022E   E8           DB 232
   \   00022F   F0           DB 240
   \   000230   E0           DB 224
   \   000231   FF           DB 255
   \   000232   7F           DB 127
   \   000233   3F           DB 63
   \   000234   80           DB 128
   \   000235   80           DB 128
   \   000236   80           DB 128
   \   000237   80           DB 128
   \   000238   80           DB 128
   \   000239   80           DB 128
   \   00023A   80           DB 128
   \   00023B   80           DB 128
   \   00023C   80           DB 128
   \   00023D   80           DB 128
   \   00023E   80           DB 128
   \   00023F   7F           DB 127
   \   000240   FF           DB 255
   \   000241   FF           DB 255
   \   000242   00           DB 0
   \   000243   02           DB 2
   \   000244   03           DB 3
   \   000245   03           DB 3
   \   000246   03           DB 3
   \   000247   03           DB 3
   \   000248   03           DB 3
   \   000249   03           DB 3
   \   00024A   03           DB 3
   \   00024B   03           DB 3
   \   00024C   03           DB 3
   \   00024D   03           DB 3
   \   00024E   03           DB 3
   \   00024F   03           DB 3
   \   000250   03           DB 3
   \   000251   02           DB 2
   \   000252   01           DB 1
   \   000253   20           DB 32
   \   000254   60           DB 96
   \   000255   E0           DB 224
   \   000256   E0           DB 224
   \   000257   E0           DB 224
   \   000258   E0           DB 224
   \   000259   E0           DB 224
   \   00025A   E0           DB 224
   \   00025B   E0           DB 224
   \   00025C   E0           DB 224
   \   00025D   E0           DB 224
   \   00025E   E0           DB 224
   \   00025F   E0           DB 224
   \   000260   60           DB 96
   \   000261   20           DB 32
   \   000262   A0           DB 160
   \   000263   C0           DB 192
   \   000264   00           DB 0
   \   000265   00           DB 0
   \   000266   00           DB 0
   \   000267   00           DB 0
   \   000268   00           DB 0
   \   000269   00           DB 0
   \   00026A   00           DB 0
   \   00026B   00           DB 0
   \   00026C   00           DB 0
   \   00026D   00           DB 0
   \   00026E   00           DB 0
   \   00026F   00           DB 0
   \   000270   00           DB 0
   \   000271   00           DB 0
   \   000272   FF           DB 255
   \   000273   FF           DB 255
   \   000274   FF           DB 255
   \   000275   00           DB 0
   \   000276   00           DB 0
   \   000277   00           DB 0
   \   000278   00           DB 0
   \   000279   00           DB 0
   \   00027A   00           DB 0
   \   00027B   00           DB 0
   \   00027C   00           DB 0
   \   00027D   00           DB 0
   \   00027E   00           DB 0
   \   00027F   00           DB 0
   \   000280   00           DB 0
   \   000281   00           DB 0
   \   000282   00           DB 0
   \   000283   C3           DB 195
   \   000284   F7           DB 247
   \   000285   E3           DB 227
   \   000286   00           DB 0
   \   000287   00           DB 0
   \   000288   00           DB 0
   \   000289   00           DB 0
   \   00028A   00           DB 0
   \   00028B   00           DB 0
   \   00028C   00           DB 0
   \   00028D   00           DB 0
   \   00028E   00           DB 0
   \   00028F   00           DB 0
   \   000290   00           DB 0
   \   000291   00           DB 0
   \   000292   00           DB 0
   \   000293   00           DB 0
   \   000294   7F           DB 127
   \   000295   FF           DB 255
   \   000296   FF           DB 255
   \   000297   00           DB 0
   \   000298   00           DB 0
   \   000299   00           DB 0
   \   00029A   00           DB 0
   \   00029B   00           DB 0
   \   00029C   00           DB 0
   \   00029D   00           DB 0
   \   00029E   00           DB 0
   \   00029F   00           DB 0
   \   0002A0   00           DB 0
   \   0002A1   00           DB 0
   \   0002A2   00           DB 0
   \   0002A3   00           DB 0
   \   0002A4   00           DB 0
   \   0002A5   00           DB 0
   \   0002A6   01           DB 1
   \   0002A7   03           DB 3
   \   0002A8   C0           DB 192
   \   0002A9   A0           DB 160
   \   0002AA   60           DB 96
   \   0002AB   E0           DB 224
   \   0002AC   E0           DB 224
   \   0002AD   E0           DB 224
   \   0002AE   E0           DB 224
   \   0002AF   E0           DB 224
   \   0002B0   E0           DB 224
   \   0002B1   E0           DB 224
   \   0002B2   E0           DB 224
   \   0002B3   E0           DB 224
   \   0002B4   E0           DB 224
   \   0002B5   E0           DB 224
   \   0002B6   60           DB 96
   \   0002B7   A0           DB 160
   \   0002B8   C0           DB 192
   \   0002B9   FF           DB 255
   \   0002BA   FF           DB 255
   \   0002BB   FF           DB 255
   \   0002BC   00           DB 0
   \   0002BD   00           DB 0
   \   0002BE   00           DB 0
   \   0002BF   00           DB 0
   \   0002C0   00           DB 0
   \   0002C1   00           DB 0
   \   0002C2   00           DB 0
   \   0002C3   00           DB 0
   \   0002C4   00           DB 0
   \   0002C5   00           DB 0
   \   0002C6   00           DB 0
   \   0002C7   FE           DB 254
   \   0002C8   FF           DB 255
   \   0002C9   FF           DB 255
   \   0002CA   E3           DB 227
   \   0002CB   F7           DB 247
   \   0002CC   FF           DB 255
   \   0002CD   1C           DB 28
   \   0002CE   1C           DB 28
   \   0002CF   1C           DB 28
   \   0002D0   1C           DB 28
   \   0002D1   1C           DB 28
   \   0002D2   1C           DB 28
   \   0002D3   1C           DB 28
   \   0002D4   1C           DB 28
   \   0002D5   1C           DB 28
   \   0002D6   1C           DB 28
   \   0002D7   1C           DB 28
   \   0002D8   EB           DB 235
   \   0002D9   F7           DB 247
   \   0002DA   E3           DB 227
   \   0002DB   FF           DB 255
   \   0002DC   7F           DB 127
   \   0002DD   3F           DB 63
   \   0002DE   80           DB 128
   \   0002DF   80           DB 128
   \   0002E0   80           DB 128
   \   0002E1   80           DB 128
   \   0002E2   80           DB 128
   \   0002E3   80           DB 128
   \   0002E4   80           DB 128
   \   0002E5   80           DB 128
   \   0002E6   80           DB 128
   \   0002E7   80           DB 128
   \   0002E8   80           DB 128
   \   0002E9   7F           DB 127
   \   0002EA   FF           DB 255
   \   0002EB   FF           DB 255
   \   0002EC   00           DB 0
   \   0002ED   02           DB 2
   \   0002EE   03           DB 3
   \   0002EF   03           DB 3
   \   0002F0   03           DB 3
   \   0002F1   03           DB 3
   \   0002F2   03           DB 3
   \   0002F3   03           DB 3
   \   0002F4   03           DB 3
   \   0002F5   03           DB 3
   \   0002F6   03           DB 3
   \   0002F7   03           DB 3
   \   0002F8   03           DB 3
   \   0002F9   03           DB 3
   \   0002FA   03           DB 3
   \   0002FB   02           DB 2
   \   0002FC   01           DB 1
   \   0002FD   C0           DB 192
   \   0002FE   A0           DB 160
   \   0002FF   60           DB 96
   \   000300   E0           DB 224
   \   000301   E0           DB 224
   \   000302   E0           DB 224
   \   000303   E0           DB 224
   \   000304   E0           DB 224
   \   000305   E0           DB 224
   \   000306   E0           DB 224
   \   000307   E0           DB 224
   \   000308   E0           DB 224
   \   000309   E0           DB 224
   \   00030A   E0           DB 224
   \   00030B   60           DB 96
   \   00030C   A0           DB 160
   \   00030D   C0           DB 192
   \   00030E   FF           DB 255
   \   00030F   FF           DB 255
   \   000310   FF           DB 255
   \   000311   00           DB 0
   \   000312   00           DB 0
   \   000313   00           DB 0
   \   000314   00           DB 0
   \   000315   00           DB 0
   \   000316   00           DB 0
   \   000317   00           DB 0
   \   000318   00           DB 0
   \   000319   00           DB 0
   \   00031A   00           DB 0
   \   00031B   00           DB 0
   \   00031C   FF           DB 255
   \   00031D   FF           DB 255
   \   00031E   FF           DB 255
   \   00031F   03           DB 3
   \   000320   07           DB 7
   \   000321   1F           DB 31
   \   000322   1C           DB 28
   \   000323   1C           DB 28
   \   000324   1C           DB 28
   \   000325   1C           DB 28
   \   000326   1C           DB 28
   \   000327   1C           DB 28
   \   000328   1C           DB 28
   \   000329   1C           DB 28
   \   00032A   1C           DB 28
   \   00032B   1C           DB 28
   \   00032C   1C           DB 28
   \   00032D   EB           DB 235
   \   00032E   F7           DB 247
   \   00032F   E3           DB 227
   \   000330   00           DB 0
   \   000331   00           DB 0
   \   000332   00           DB 0
   \   000333   80           DB 128
   \   000334   80           DB 128
   \   000335   80           DB 128
   \   000336   80           DB 128
   \   000337   80           DB 128
   \   000338   80           DB 128
   \   000339   80           DB 128
   \   00033A   80           DB 128
   \   00033B   80           DB 128
   \   00033C   80           DB 128
   \   00033D   80           DB 128
   \   00033E   3F           DB 63
   \   00033F   7F           DB 127
   \   000340   FF           DB 255
   \   000341   00           DB 0
   \   000342   02           DB 2
   \   000343   03           DB 3
   \   000344   03           DB 3
   \   000345   03           DB 3
   \   000346   03           DB 3
   \   000347   03           DB 3
   \   000348   03           DB 3
   \   000349   03           DB 3
   \   00034A   03           DB 3
   \   00034B   03           DB 3
   \   00034C   03           DB 3
   \   00034D   03           DB 3
   \   00034E   03           DB 3
   \   00034F   03           DB 3
   \   000350   02           DB 2
   \   000351   00           DB 0
    266          {
    267          /*--  µ˜»Î¡À“ª∑˘ÕºœÒ£∫C:\Users\William\Desktop\mode\RT0MOD.bmp  --*/
    268          /*--  øÌ∂»x∏ﬂ∂»=17x40  --*/
    269          0xC0,0xA0,0x60,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0x60,0xA0,
    270          0xC0,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,
    271          0xFF,0xFF,0xE3,0xF7,0xE3,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    272          0xE3,0xF7,0xE3,0xFF,0xFF,0x7F,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
    273          0x80,0x3F,0x7F,0xFF,0x01,0x02,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,
    274          0x03,0x03,0x03,0x02,0x00,
    275          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,
    276          0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,
    277          0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    278          0xC1,0xF7,0xE3,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    279          0x00,0x7F,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    280          0x00,0x00,0x00,0x01,0x03,
    281          0x00,0x20,0x60,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0x60,0xA0,
    282          0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,
    283          0xFF,0xFF,0xE0,0xE0,0xDC,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,
    284          0x0B,0x07,0x03,0xFF,0xFF,0x7F,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
    285          0x80,0x00,0x00,0x00,0x01,0x02,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,
    286          0x03,0x03,0x03,0x02,0x00,
    287          0x20,0x60,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0x60,0x20,0x80,
    288          0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,
    289          0xFF,0xFF,0x08,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,
    290          0xEB,0xF7,0xE3,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
    291          0x00,0x3F,0x7F,0xFF,0x02,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,
    292          0x03,0x03,0x02,0x00,0x00,
    293          0xE0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,
    294          0xE0,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,
    295          0xFF,0xFF,0x03,0x07,0x1D,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,
    296          0xCB,0xF7,0xE3,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    297          0x00,0x7F,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    298          0x00,0x00,0x00,0x01,0x03,
    299          0xC0,0xA0,0x60,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0x60,0x20,
    300          0x00,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    301          0x00,0x00,0x03,0x07,0x1F,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,
    302          0xC8,0xE0,0xE0,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
    303          0x80,0x7F,0xFF,0xFF,0x00,0x02,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,
    304          0x03,0x03,0x03,0x02,0x01,
    305          0xC0,0xA0,0x60,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0x60,0x20,
    306          0x00,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    307          0x00,0x00,0xE3,0xF7,0xFF,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,
    308          0xE8,0xF0,0xE0,0xFF,0x7F,0x3F,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
    309          0x80,0x7F,0xFF,0xFF,0x00,0x02,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,
    310          0x03,0x03,0x03,0x02,0x01,
    311          0x20,0x60,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0x60,0x20,0xA0,
    312          0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,
    313          0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    314          0xC3,0xF7,0xE3,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    315          0x00,0x7F,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    316          0x00,0x00,0x00,0x01,0x03,
    317          0xC0,0xA0,0x60,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0x60,0xA0,
    318          0xC0,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,
    319          0xFF,0xFF,0xE3,0xF7,0xFF,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,
    320          0xEB,0xF7,0xE3,0xFF,0x7F,0x3F,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
    321          0x80,0x7F,0xFF,0xFF,0x00,0x02,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,
    322          0x03,0x03,0x03,0x02,0x01,
    323          0xC0,0xA0,0x60,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0x60,0xA0,
    324          0xC0,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,
    325          0xFF,0xFF,0x03,0x07,0x1F,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,
    326          0xEB,0xF7,0xE3,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
    327          0x80,0x3F,0x7F,0xFF,0x00,0x02,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,
    328          0x03,0x03,0x03,0x02,0x00
    329          };
    330          
    331          //  the ASCII CODE for NUM

   \                                 In  segment XDATA_ROM_C, align 1
    332          const uint8 ASCII_CODE[90] = {
   \                     ASCII_CODE:
   \   000000   3E           DB 62
   \   000001   51           DB 81
   \   000002   49           DB 73
   \   000003   45           DB 69
   \   000004   3E           DB 62
   \   000005   00           DB 0
   \   000006   42           DB 66
   \   000007   7F           DB 127
   \   000008   40           DB 64
   \   000009   00           DB 0
   \   00000A   42           DB 66
   \   00000B   61           DB 97
   \   00000C   51           DB 81
   \   00000D   49           DB 73
   \   00000E   46           DB 70
   \   00000F   21           DB 33
   \   000010   41           DB 65
   \   000011   45           DB 69
   \   000012   4B           DB 75
   \   000013   31           DB 49
   \   000014   18           DB 24
   \   000015   14           DB 20
   \   000016   12           DB 18
   \   000017   7F           DB 127
   \   000018   10           DB 16
   \   000019   27           DB 39
   \   00001A   45           DB 69
   \   00001B   45           DB 69
   \   00001C   45           DB 69
   \   00001D   39           DB 57
   \   00001E   3C           DB 60
   \   00001F   4A           DB 74
   \   000020   49           DB 73
   \   000021   49           DB 73
   \   000022   30           DB 48
   \   000023   01           DB 1
   \   000024   71           DB 113
   \   000025   09           DB 9
   \   000026   05           DB 5
   \   000027   03           DB 3
   \   000028   36           DB 54
   \   000029   49           DB 73
   \   00002A   49           DB 73
   \   00002B   49           DB 73
   \   00002C   36           DB 54
   \   00002D   06           DB 6
   \   00002E   49           DB 73
   \   00002F   49           DB 73
   \   000030   29           DB 41
   \   000031   1E           DB 30
   \   000032   7E           DB 126
   \   000033   11           DB 17
   \   000034   11           DB 17
   \   000035   11           DB 17
   \   000036   7E           DB 126
   \   000037   7F           DB 127
   \   000038   49           DB 73
   \   000039   49           DB 73
   \   00003A   49           DB 73
   \   00003B   36           DB 54
   \   00003C   3E           DB 62
   \   00003D   41           DB 65
   \   00003E   41           DB 65
   \   00003F   41           DB 65
   \   000040   22           DB 34
   \   000041   7F           DB 127
   \   000042   41           DB 65
   \   000043   41           DB 65
   \   000044   22           DB 34
   \   000045   1C           DB 28
   \   000046   7F           DB 127
   \   000047   49           DB 73
   \   000048   49           DB 73
   \   000049   49           DB 73
   \   00004A   41           DB 65
   \   00004B   7F           DB 127
   \   00004C   09           DB 9
   \   00004D   09           DB 9
   \   00004E   09           DB 9
   \   00004F   01           DB 1
   \   000050   7F           DB 127
   \   000051   04           DB 4
   \   000052   08           DB 8
   \   000053   10           DB 16
   \   000054   7F           DB 127
   \   000055   00           DB 0
   \   000056   36           DB 54
   \   000057   36           DB 54
   \   000058   00           DB 0
   \   000059   00           DB 0
    333          0x3e,0x51,0x49,0x45,0x3e,//-0-
    334          0x00,0x42,0x7f,0x40,0x00,//-1-
    335          0x42,0x61,0x51,0x49,0x46,//-2-
    336          0x21,0x41,0x45,0x4b,0x31,//-3-
    337          0x18,0x14,0x12,0x7f,0x10,//-4-
    338          0x27,0x45,0x45,0x45,0x39,//-5-
    339          0x3c,0x4a,0x49,0x49,0x30,//-6-
    340          0x01,0x71,0x09,0x05,0x03,//-7-
    341          0x36,0x49,0x49,0x49,0x36,//-8-
    342          0x06,0x49,0x49,0x29,0x1e,//-9-
    343          0x7e,0x11,0x11,0x11,0x7e,//-A-
    344          0x7f,0x49,0x49,0x49,0x36,//-B-
    345          0x3e,0x41,0x41,0x41,0x22,//-C-
    346          0x7f,0x41,0x41,0x22,0x1c,//-D-
    347          0x7f,0x49,0x49,0x49,0x41,//-E-
    348          0x7f,0x09,0x09,0x09,0x01,//-F-
    349          0x7f,0x04,0x08,0x10,0x7f,//-N-
    350          0x00,0x36,0x36,0x00,0x00,//-:-
    351          };
    352          
    353          
    354          // the power off picture

   \                                 In  segment XDATA_ROM_C, align 1
    355          const uint8 POWER_PIC[57] =
   \                     POWER_PIC:
   \   000000   80           DB 128
   \   000001   C0           DB 192
   \   000002   E0           DB 224
   \   000003   F0           DB 240
   \   000004   F0           DB 240
   \   000005   70           DB 112
   \   000006   00           DB 0
   \   000007   00           DB 0
   \   000008   FF           DB 255
   \   000009   FF           DB 255
   \   00000A   FF           DB 255
   \   00000B   00           DB 0
   \   00000C   00           DB 0
   \   00000D   70           DB 112
   \   00000E   F0           DB 240
   \   00000F   F0           DB 240
   \   000010   E0           DB 224
   \   000011   C0           DB 192
   \   000012   80           DB 128
   \   000013   FF           DB 255
   \   000014   FF           DB 255
   \   000015   FF           DB 255
   \   000016   01           DB 1
   \   000017   00           DB 0
   \   000018   00           DB 0
   \   000019   00           DB 0
   \   00001A   00           DB 0
   \   00001B   7F           DB 127
   \   00001C   7F           DB 127
   \   00001D   7F           DB 127
   \   00001E   00           DB 0
   \   00001F   00           DB 0
   \   000020   00           DB 0
   \   000021   00           DB 0
   \   000022   01           DB 1
   \   000023   FF           DB 255
   \   000024   FF           DB 255
   \   000025   FF           DB 255
   \   000026   87           DB 135
   \   000027   8F           DB 143
   \   000028   9F           DB 159
   \   000029   BC           DB 188
   \   00002A   B8           DB 184
   \   00002B   B8           DB 184
   \   00002C   B8           DB 184
   \   00002D   B8           DB 184
   \   00002E   B8           DB 184
   \   00002F   B8           DB 184
   \   000030   B8           DB 184
   \   000031   B8           DB 184
   \   000032   B8           DB 184
   \   000033   B8           DB 184
   \   000034   B8           DB 184
   \   000035   BC           DB 188
   \   000036   9F           DB 159
   \   000037   8F           DB 143
   \   000038   87           DB 135
    356          {
    357          /*--  µ˜»Î¡À“ª∑˘ÕºœÒ£∫C:\Users\William\Desktop\±œ“µ…Ëº∆\Õº–ŒΩÁ√Ê…Ëº∆\Enddevice\mode\Power.bmp  --*/
    358          /*--  øÌ∂»x∏ﬂ∂»=19x24  --*/
    359          0x80,0xC0,0xE0,0xF0,0xF0,0x70,0x00,0x00,0xFF,0xFF,0xFF,0x00,0x00,0x70,0xF0,0xF0,
    360          0xE0,0xC0,0x80,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x00,0x00,0x7F,0x7F,0x7F,0x00,0x00,
    361          0x00,0x00,0x01,0xFF,0xFF,0xFF,0x87,0x8F,0x9F,0xBC,0xB8,0xB8,0xB8,0xB8,0xB8,0xB8,
    362          0xB8,0xB8,0xB8,0xB8,0xB8,0xBC,0x9F,0x8F,0x87
    363          };
    364          
    365          
    366          // the error picture

   \                                 In  segment XDATA_ROM_C, align 1
    367          const uint8 ERROR_PIC[340] = 
   \                     ERROR_PIC:
   \   000000   00           DB 0
   \   000001   00           DB 0
   \   000002   00           DB 0
   \   000003   00           DB 0
   \   000004   00           DB 0
   \   000005   00           DB 0
   \   000006   00           DB 0
   \   000007   00           DB 0
   \   000008   00           DB 0
   \   000009   00           DB 0
   \   00000A   00           DB 0
   \   00000B   00           DB 0
   \   00000C   00           DB 0
   \   00000D   00           DB 0
   \   00000E   00           DB 0
   \   00000F   00           DB 0
   \   000010   00           DB 0
   \   000011   00           DB 0
   \   000012   00           DB 0
   \   000013   00           DB 0
   \   000014   00           DB 0
   \   000015   00           DB 0
   \   000016   00           DB 0
   \   000017   00           DB 0
   \   000018   00           DB 0
   \   000019   00           DB 0
   \   00001A   00           DB 0
   \   00001B   00           DB 0
   \   00001C   00           DB 0
   \   00001D   00           DB 0
   \   00001E   00           DB 0
   \   00001F   00           DB 0
   \   000020   00           DB 0
   \   000021   00           DB 0
   \   000022   00           DB 0
   \   000023   00           DB 0
   \   000024   00           DB 0
   \   000025   00           DB 0
   \   000026   00           DB 0
   \   000027   00           DB 0
   \   000028   00           DB 0
   \   000029   00           DB 0
   \   00002A   00           DB 0
   \   00002B   00           DB 0
   \   00002C   00           DB 0
   \   00002D   00           DB 0
   \   00002E   00           DB 0
   \   00002F   00           DB 0
   \   000030   00           DB 0
   \   000031   00           DB 0
   \   000032   00           DB 0
   \   000033   00           DB 0
   \   000034   00           DB 0
   \   000035   00           DB 0
   \   000036   00           DB 0
   \   000037   00           DB 0
   \   000038   00           DB 0
   \   000039   00           DB 0
   \   00003A   00           DB 0
   \   00003B   00           DB 0
   \   00003C   00           DB 0
   \   00003D   00           DB 0
   \   00003E   00           DB 0
   \   00003F   00           DB 0
   \   000040   00           DB 0
   \   000041   00           DB 0
   \   000042   00           DB 0
   \   000043   00           DB 0
   \   000044   F8           DB 248
   \   000045   F8           DB 248
   \   000046   18           DB 24
   \   000047   18           DB 24
   \   000048   18           DB 24
   \   000049   18           DB 24
   \   00004A   18           DB 24
   \   00004B   18           DB 24
   \   00004C   18           DB 24
   \   00004D   18           DB 24
   \   00004E   08           DB 8
   \   00004F   00           DB 0
   \   000050   00           DB 0
   \   000051   00           DB 0
   \   000052   F8           DB 248
   \   000053   F8           DB 248
   \   000054   18           DB 24
   \   000055   18           DB 24
   \   000056   18           DB 24
   \   000057   18           DB 24
   \   000058   18           DB 24
   \   000059   18           DB 24
   \   00005A   18           DB 24
   \   00005B   E0           DB 224
   \   00005C   E0           DB 224
   \   00005D   00           DB 0
   \   00005E   00           DB 0
   \   00005F   00           DB 0
   \   000060   F8           DB 248
   \   000061   F8           DB 248
   \   000062   18           DB 24
   \   000063   18           DB 24
   \   000064   18           DB 24
   \   000065   18           DB 24
   \   000066   18           DB 24
   \   000067   18           DB 24
   \   000068   18           DB 24
   \   000069   E0           DB 224
   \   00006A   E0           DB 224
   \   00006B   00           DB 0
   \   00006C   00           DB 0
   \   00006D   00           DB 0
   \   00006E   F0           DB 240
   \   00006F   F0           DB 240
   \   000070   18           DB 24
   \   000071   18           DB 24
   \   000072   18           DB 24
   \   000073   18           DB 24
   \   000074   18           DB 24
   \   000075   18           DB 24
   \   000076   18           DB 24
   \   000077   F0           DB 240
   \   000078   F0           DB 240
   \   000079   00           DB 0
   \   00007A   00           DB 0
   \   00007B   00           DB 0
   \   00007C   F8           DB 248
   \   00007D   F8           DB 248
   \   00007E   18           DB 24
   \   00007F   18           DB 24
   \   000080   18           DB 24
   \   000081   18           DB 24
   \   000082   18           DB 24
   \   000083   18           DB 24
   \   000084   18           DB 24
   \   000085   E0           DB 224
   \   000086   E0           DB 224
   \   000087   00           DB 0
   \   000088   F7           DB 247
   \   000089   FB           DB 251
   \   00008A   18           DB 24
   \   00008B   18           DB 24
   \   00008C   18           DB 24
   \   00008D   18           DB 24
   \   00008E   18           DB 24
   \   00008F   18           DB 24
   \   000090   18           DB 24
   \   000091   00           DB 0
   \   000092   00           DB 0
   \   000093   00           DB 0
   \   000094   00           DB 0
   \   000095   00           DB 0
   \   000096   F7           DB 247
   \   000097   FB           DB 251
   \   000098   18           DB 24
   \   000099   D8           DB 216
   \   00009A   D8           DB 216
   \   00009B   98           DB 152
   \   00009C   18           DB 24
   \   00009D   18           DB 24
   \   00009E   18           DB 24
   \   00009F   07           DB 7
   \   0000A0   07           DB 7
   \   0000A1   00           DB 0
   \   0000A2   00           DB 0
   \   0000A3   00           DB 0
   \   0000A4   F7           DB 247
   \   0000A5   FB           DB 251
   \   0000A6   18           DB 24
   \   0000A7   D8           DB 216
   \   0000A8   D8           DB 216
   \   0000A9   98           DB 152
   \   0000AA   18           DB 24
   \   0000AB   18           DB 24
   \   0000AC   18           DB 24
   \   0000AD   07           DB 7
   \   0000AE   07           DB 7
   \   0000AF   00           DB 0
   \   0000B0   00           DB 0
   \   0000B1   00           DB 0
   \   0000B2   F7           DB 247
   \   0000B3   E7           DB 231
   \   0000B4   00           DB 0
   \   0000B5   00           DB 0
   \   0000B6   00           DB 0
   \   0000B7   00           DB 0
   \   0000B8   00           DB 0
   \   0000B9   00           DB 0
   \   0000BA   00           DB 0
   \   0000BB   E3           DB 227
   \   0000BC   F7           DB 247
   \   0000BD   00           DB 0
   \   0000BE   00           DB 0
   \   0000BF   00           DB 0
   \   0000C0   F7           DB 247
   \   0000C1   FB           DB 251
   \   0000C2   18           DB 24
   \   0000C3   D8           DB 216
   \   0000C4   D8           DB 216
   \   0000C5   98           DB 152
   \   0000C6   18           DB 24
   \   0000C7   18           DB 24
   \   0000C8   18           DB 24
   \   0000C9   07           DB 7
   \   0000CA   07           DB 7
   \   0000CB   00           DB 0
   \   0000CC   0F           DB 15
   \   0000CD   17           DB 23
   \   0000CE   18           DB 24
   \   0000CF   18           DB 24
   \   0000D0   18           DB 24
   \   0000D1   18           DB 24
   \   0000D2   18           DB 24
   \   0000D3   18           DB 24
   \   0000D4   18           DB 24
   \   0000D5   18           DB 24
   \   0000D6   10           DB 16
   \   0000D7   00           DB 0
   \   0000D8   00           DB 0
   \   0000D9   00           DB 0
   \   0000DA   1F           DB 31
   \   0000DB   0F           DB 15
   \   0000DC   00           DB 0
   \   0000DD   00           DB 0
   \   0000DE   00           DB 0
   \   0000DF   01           DB 1
   \   0000E0   03           DB 3
   \   0000E1   06           DB 6
   \   0000E2   0E           DB 14
   \   0000E3   1C           DB 28
   \   0000E4   18           DB 24
   \   0000E5   00           DB 0
   \   0000E6   00           DB 0
   \   0000E7   00           DB 0
   \   0000E8   1F           DB 31
   \   0000E9   0F           DB 15
   \   0000EA   00           DB 0
   \   0000EB   00           DB 0
   \   0000EC   00           DB 0
   \   0000ED   01           DB 1
   \   0000EE   03           DB 3
   \   0000EF   06           DB 6
   \   0000F0   0E           DB 14
   \   0000F1   1C           DB 28
   \   0000F2   18           DB 24
   \   0000F3   00           DB 0
   \   0000F4   00           DB 0
   \   0000F5   00           DB 0
   \   0000F6   07           DB 7
   \   0000F7   1F           DB 31
   \   0000F8   18           DB 24
   \   0000F9   18           DB 24
   \   0000FA   18           DB 24
   \   0000FB   18           DB 24
   \   0000FC   18           DB 24
   \   0000FD   18           DB 24
   \   0000FE   18           DB 24
   \   0000FF   07           DB 7
   \   000100   07           DB 7
   \   000101   00           DB 0
   \   000102   00           DB 0
   \   000103   00           DB 0
   \   000104   1F           DB 31
   \   000105   0F           DB 15
   \   000106   00           DB 0
   \   000107   00           DB 0
   \   000108   00           DB 0
   \   000109   01           DB 1
   \   00010A   03           DB 3
   \   00010B   06           DB 6
   \   00010C   0E           DB 14
   \   00010D   1C           DB 28
   \   00010E   18           DB 24
   \   00010F   00           DB 0
   \   000110   00           DB 0
   \   000111   00           DB 0
   \   000112   00           DB 0
   \   000113   00           DB 0
   \   000114   00           DB 0
   \   000115   00           DB 0
   \   000116   00           DB 0
   \   000117   00           DB 0
   \   000118   00           DB 0
   \   000119   00           DB 0
   \   00011A   00           DB 0
   \   00011B   00           DB 0
   \   00011C   00           DB 0
   \   00011D   00           DB 0
   \   00011E   00           DB 0
   \   00011F   00           DB 0
   \   000120   00           DB 0
   \   000121   00           DB 0
   \   000122   00           DB 0
   \   000123   00           DB 0
   \   000124   00           DB 0
   \   000125   00           DB 0
   \   000126   00           DB 0
   \   000127   00           DB 0
   \   000128   00           DB 0
   \   000129   00           DB 0
   \   00012A   00           DB 0
   \   00012B   00           DB 0
   \   00012C   00           DB 0
   \   00012D   00           DB 0
   \   00012E   00           DB 0
   \   00012F   00           DB 0
   \   000130   00           DB 0
   \   000131   00           DB 0
   \   000132   00           DB 0
   \   000133   00           DB 0
   \   000134   00           DB 0
   \   000135   00           DB 0
   \   000136   00           DB 0
   \   000137   00           DB 0
   \   000138   00           DB 0
   \   000139   00           DB 0
   \   00013A   00           DB 0
   \   00013B   00           DB 0
   \   00013C   00           DB 0
   \   00013D   00           DB 0
   \   00013E   00           DB 0
   \   00013F   00           DB 0
   \   000140   00           DB 0
   \   000141   00           DB 0
   \   000142   00           DB 0
   \   000143   00           DB 0
   \   000144   00           DB 0
   \   000145   00           DB 0
   \   000146   00           DB 0
   \   000147   00           DB 0
   \   000148   00           DB 0
   \   000149   00           DB 0
   \   00014A   00           DB 0
   \   00014B   00           DB 0
   \   00014C   00           DB 0
   \   00014D   00           DB 0
   \   00014E   00           DB 0
   \   00014F   00           DB 0
   \   000150   00           DB 0
   \   000151   00           DB 0
   \   000152   00           DB 0
   \   000153   00           DB 0
    368          {
    369            /*--  µ˜»Î¡À“ª∑˘ÕºœÒ£∫C:\Users\William\Desktop\±œ“µ…Ëº∆\Õº–ŒΩÁ√Ê…Ëº∆\Enddevice\mode\error.bmp  --*/
    370          /*--  øÌ∂»x∏ﬂ∂»=68x40  --*/
    371          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    372          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    373          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    374          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    375          0x00,0x00,0x00,0x00,0xF8,0xF8,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x08,0x00,
    376          0x00,0x00,0xF8,0xF8,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0xE0,0xE0,0x00,0x00,0x00,
    377          0xF8,0xF8,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0xE0,0xE0,0x00,0x00,0x00,0xF0,0xF0,
    378          0x18,0x18,0x18,0x18,0x18,0x18,0x18,0xF0,0xF0,0x00,0x00,0x00,0xF8,0xF8,0x18,0x18,
    379          0x18,0x18,0x18,0x18,0x18,0xE0,0xE0,0x00,0xF7,0xFB,0x18,0x18,0x18,0x18,0x18,0x18,
    380          0x18,0x00,0x00,0x00,0x00,0x00,0xF7,0xFB,0x18,0xD8,0xD8,0x98,0x18,0x18,0x18,0x07,
    381          0x07,0x00,0x00,0x00,0xF7,0xFB,0x18,0xD8,0xD8,0x98,0x18,0x18,0x18,0x07,0x07,0x00,
    382          0x00,0x00,0xF7,0xE7,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE3,0xF7,0x00,0x00,0x00,
    383          0xF7,0xFB,0x18,0xD8,0xD8,0x98,0x18,0x18,0x18,0x07,0x07,0x00,0x0F,0x17,0x18,0x18,
    384          0x18,0x18,0x18,0x18,0x18,0x18,0x10,0x00,0x00,0x00,0x1F,0x0F,0x00,0x00,0x00,0x01,
    385          0x03,0x06,0x0E,0x1C,0x18,0x00,0x00,0x00,0x1F,0x0F,0x00,0x00,0x00,0x01,0x03,0x06,
    386          0x0E,0x1C,0x18,0x00,0x00,0x00,0x07,0x1F,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x07,
    387          0x07,0x00,0x00,0x00,0x1F,0x0F,0x00,0x00,0x00,0x01,0x03,0x06,0x0E,0x1C,0x18,0x00,
    388          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    389          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    390          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    391          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    392          0x00,0x00,0x00,0x00
    393          };
    394          
    395          /*************************************************************************************************
    396                                                     MACROS
    397           **************************************************************************************************/
    398          
    399          
    400          
    401          
    402          #if (HAL_LCD == TRUE)
    403          /**************************************************************************************************
    404           *                                       LOCAL VARIABLES
    405           **************************************************************************************************/
    406          
    407          /**************************************************************************************************
    408           *                                       FUNCTIONS - API
    409           **************************************************************************************************/
    410          void HalLcd_HW_WaitUs(uint16 i);
    411          void HalLcd_HW_WriteCommand(uint8 cmd);
    412          void HalLcd_HW_WriteData(uint8 data);
    413          void HalLcd_HW_WriteAddr(uint8 page,uint8 col);
    414          void HalLcd_HW_Clear(void);
    415          void HalLcd_HW_LoadPicture(const uint8 *  pic ,uint8 height, uint8 width,uint8 start_x, 
    416                                     uint8 start_y, bool clear);
    417          void HalLcd_HW_WriteST(bool power);
    418          void HalLcd_HW_WriteSTU(bool power);
    419          void HalLcd_HW_WriteRTU(void);
    420          void HalLcdWriteWiFiMod(uint8 mod);
    421          void HalLcdWriteEndMod(bool MOD);
    422          void HalLcdWriteRealTempeMod(bool  mod);
    423          void HalLcdWritePower(bool POWER);
    424          void HalLcdWriteError(bool clear);
    425          
    426          void HalLcdWriteSetTemperature(uint8 temper,bool power);
    427          void HalLcdWriteRealTemperature(uint16  temper);
    428          void HalLcdWriteRelayState(bool  state);
    429          void HalLcdWriteDebug(uint8 num,bool shift,bool sign,bool clear,bool blink);
    430          void HalLcdWriteChar5x8(uint8 chr,uint8 page,uint8 col,bool clear);
    431          //void HalLcdWriteString5x8(uint8* str,uint8 len, uint8 page, uint8 col);
    432          void LoadBackground(void);
    433          #endif //LCD
    434          
    435          /**************************************************************************************************
    436           * @fn      HalLcdInit
    437           *
    438           * @brief   Initilize LCD Service
    439           *
    440           * @param   init - pointer to void that contains the initialized value
    441           *
    442           * @return  None
    443           **************************************************************************************************/
    444          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    445          void HalLcdInit(void)
   \                     HalLcdInit:
    446          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    447          #if (HAL_LCD == TRUE)
    448            /*config the I/O---------------by Zimuge*/
    449              P1SEL &= ~(BV(3) + BV(5) + BV(6) + BV(7));
   \   000004   53F417       ANL     0xf4,#0x17
    450              P1DIR |= (BV(3) + BV(5) + BV(6) + BV(7));
   \   000007   43FEE8       ORL     0xfe,#0xe8
    451              P2SEL &= ~BV(0);
   \   00000A   53F5FE       ANL     0xf5,#0xfe
    452              P2DIR |= BV(0);
   \   00000D   43FF01       ORL     0xff,#0x1
    453              LEDD = 0; //open the backlight
   \   000010   C293         CLR     0x90.3
    454              HalLcd_HW_WriteCommand(0xE2);// software rest
   \   000012                ; Setup parameters for call to function HalLcd_HW_WriteCommand
   \   000012   79E2         MOV     R1,#-0x1e
   \   000014   12....       LCALL   ?Subroutine4 & 0xFFFF
    455              HalLcd_HW_WaitUs(2);
    456             
    457              HalLcd_HW_WriteCommand(0x2C);// open the boost circuit
   \                     ??CrossCallReturnLabel_0:
   \   000017                ; Setup parameters for call to function HalLcd_HW_WriteCommand
   \   000017   792C         MOV     R1,#0x2c
   \   000019   12....       LCALL   ?Subroutine4 & 0xFFFF
    458              HalLcd_HW_WaitUs(2);
    459              HalLcd_HW_WriteCommand(0x2E);// open the voltage management circuit
   \                     ??CrossCallReturnLabel_1:
   \   00001C                ; Setup parameters for call to function HalLcd_HW_WriteCommand
   \   00001C   792E         MOV     R1,#0x2e
   \   00001E   12....       LCALL   ?Subroutine4 & 0xFFFF
    460              HalLcd_HW_WaitUs(2);
    461              HalLcd_HW_WriteCommand(0x2F);// open the voltage follower
   \                     ??CrossCallReturnLabel_2:
   \   000021                ; Setup parameters for call to function HalLcd_HW_WriteCommand
   \   000021   792F         MOV     R1,#0x2f
   \   000023   12....       LCALL   ?Subroutine4 & 0xFFFF
    462              HalLcd_HW_WaitUs(2);
    463              
    464              HalLcd_HW_WriteCommand(0x24);// select the contrast roughly
   \                     ??CrossCallReturnLabel_3:
   \   000026                ; Setup parameters for call to function HalLcd_HW_WriteCommand
   \   000026   7924         MOV     R1,#0x24
   \   000028   12....       LCALL   ??HalLcd_HW_WriteCommand?relay
    465              HalLcd_HW_WriteCommand(0x81);// select the contrast smoothly
   \   00002B                ; Setup parameters for call to function HalLcd_HW_WriteCommand
   \   00002B   7981         MOV     R1,#-0x7f
   \   00002D   12....       LCALL   ??HalLcd_HW_WriteCommand?relay
    466              HalLcd_HW_WriteCommand(0x12);
   \   000030                ; Setup parameters for call to function HalLcd_HW_WriteCommand
   \   000030   7912         MOV     R1,#0x12
   \   000032   12....       LCALL   ??HalLcd_HW_WriteCommand?relay
    467              HalLcd_HW_WriteCommand(0xA2);// select the bias voltage radio 1/9
   \   000035                ; Setup parameters for call to function HalLcd_HW_WriteCommand
   \   000035   79A2         MOV     R1,#-0x5e
   \   000037   12....       LCALL   ??HalLcd_HW_WriteCommand?relay
    468              
    469              HalLcd_HW_WriteCommand(0xC8);// scan the LCD from top to bottom
   \   00003A                ; Setup parameters for call to function HalLcd_HW_WriteCommand
   \   00003A   79C8         MOV     R1,#-0x38
   \   00003C   12....       LCALL   ??HalLcd_HW_WriteCommand?relay
    470              
    471              HalLcd_HW_WriteCommand(0xA0);// the address will automatically increase one by one
   \   00003F                ; Setup parameters for call to function HalLcd_HW_WriteCommand
   \   00003F   79A0         MOV     R1,#-0x60
   \   000041   12....       LCALL   ??HalLcd_HW_WriteCommand?relay
    472              
    473              HalLcd_HW_WriteCommand(0x40);// select the begining of the column to display the char
   \   000044                ; Setup parameters for call to function HalLcd_HW_WriteCommand
   \   000044   7940         MOV     R1,#0x40
   \   000046   12....       LCALL   ??HalLcd_HW_WriteCommand?relay
    474              
    475              HalLcd_HW_WriteCommand(0xAF);// open the lcd
   \   000049                ; Setup parameters for call to function HalLcd_HW_WriteCommand
   \   000049   79AF         MOV     R1,#-0x51
   \   00004B   12....       LCALL   ??HalLcd_HW_WriteCommand?relay
    476              
    477             // HalLcd_HW_WriteCommand(0xA5);
    478              HalLcd_HW_Clear();
   \   00004E                ; Setup parameters for call to function HalLcd_HW_Clear
   \   00004E   12....       LCALL   ??HalLcd_HW_Clear?relay
    479              LoadBackground();
   \   000051                ; Setup parameters for call to function LoadBackground
   \   000051   12....       LCALL   ??LoadBackground?relay
    480          
    481          #endif
    482          }
   \   000054   D083         POP     DPH
   \   000056   D082         POP     DPL
   \   000058   02....       LJMP    ?BRET
   \   00005B                REQUIRE P1SEL
   \   00005B                REQUIRE P1DIR
   \   00005B                REQUIRE P2SEL
   \   00005B                REQUIRE P2DIR
   \   00005B                REQUIRE _A_P1

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine4:
   \   000000   12....       LCALL   ??HalLcd_HW_WriteCommand?relay
   \   000003                ; Setup parameters for call to function HalLcd_HW_WaitUs
   \   000003                ; Setup parameters for call to function HalLcd_HW_WaitUs
   \   000003                ; Setup parameters for call to function HalLcd_HW_WaitUs
   \   000003                ; Setup parameters for call to function HalLcd_HW_WaitUs
   \   000003   7A02         MOV     R2,#0x2
   \   000005   7B00         MOV     R3,#0x0
   \   000007   12....       LCALL   ??HalLcd_HW_WaitUs?relay
   \   00000A   22           RET
    483          
    484          /**************************************************************************************************
    485           *                                    HARDWARE LCD
    486           **************************************************************************************************/
    487          #if (HAL_LCD == TRUE)
    488          
    489          /**************************************************************************************************
    490           * @fn      HalLcd_HW_WaitUs
    491           *
    492           * @brief   wait for x us. @ 32MHz MCU clock it takes 32 "nop"s for 1 us delay.
    493           *
    494           * @param   x us. range[0-65536]
    495           *
    496           * @return  None
    497           **************************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    498          void HalLcd_HW_WaitUs(uint16 microSecs)
   \                     HalLcd_HW_WaitUs:
    499          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
   \   000000   8020         SJMP    ??HalLcd_HW_WaitUs_0
    500            while(microSecs--)
    501            {
    502              /* 32 NOPs == 1 usecs */
    503              asm("nop"); asm("nop"); asm("nop"); asm("nop"); asm("nop");
   \                     ??HalLcd_HW_WaitUs_1:
   \   000002   00           nop
   \   000003   00           nop
   \   000004   00           nop
   \   000005   00           nop
   \   000006   00           nop
    504              asm("nop"); asm("nop"); asm("nop"); asm("nop"); asm("nop");
   \   000007   00           nop
   \   000008   00           nop
   \   000009   00           nop
   \   00000A   00           nop
   \   00000B   00           nop
    505              asm("nop"); asm("nop"); asm("nop"); asm("nop"); asm("nop");
   \   00000C   00           nop
   \   00000D   00           nop
   \   00000E   00           nop
   \   00000F   00           nop
   \   000010   00           nop
    506              asm("nop"); asm("nop"); asm("nop"); asm("nop"); asm("nop");
   \   000011   00           nop
   \   000012   00           nop
   \   000013   00           nop
   \   000014   00           nop
   \   000015   00           nop
    507              asm("nop"); asm("nop"); asm("nop"); asm("nop"); asm("nop");
   \   000016   00           nop
   \   000017   00           nop
   \   000018   00           nop
   \   000019   00           nop
   \   00001A   00           nop
    508              asm("nop"); asm("nop"); asm("nop"); asm("nop"); asm("nop");
   \   00001B   00           nop
   \   00001C   00           nop
   \   00001D   00           nop
   \   00001E   00           nop
   \   00001F   00           nop
    509              asm("nop"); asm("nop");
   \   000020   00           nop
   \   000021   00           nop
    510            }
   \                     ??HalLcd_HW_WaitUs_0:
   \   000022   EA           MOV     A,R2
   \   000023   F8           MOV     R0,A
   \   000024   EB           MOV     A,R3
   \   000025   F9           MOV     R1,A
   \   000026   E8           MOV     A,R0
   \   000027   24FF         ADD     A,#-0x1
   \   000029   1A           DEC     R2
   \   00002A   E9           MOV     A,R1
   \   00002B   34FF         ADDC    A,#-0x1
   \   00002D   FB           MOV     R3,A
   \   00002E   E8           MOV     A,R0
   \   00002F   49           ORL     A,R1
   \   000030   70D0         JNZ     ??HalLcd_HW_WaitUs_1
    511          }
   \   000032   02....       LJMP    ?BRET
    512          
    513          /**************************************************************************************************
    514           * @fn      HalLcdWriteCommand to the LCD
    515           *
    516           * @brief   Write a command to the LCD
    517           *
    518           * @param  cmd-the command to be wrote
    519           *         
    520           *
    521           * @return  None
    522           **************************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    523          void HalLcd_HW_WriteCommand(uint8 cmd)
   \                     HalLcd_HW_WriteCommand:
    524          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FF           MOV     R7,A
    525             uint8 i = 0;
    526             LCD_CS = 0; // to select the LCD
   \   000007   C2A0         CLR     0xa0.0
    527             HalLcd_HW_WaitUs(1);
   \   000009                ; Setup parameters for call to function HalLcd_HW_WaitUs
   \   000009   7A01         MOV     R2,#0x1
   \   00000B   7B00         MOV     R3,#0x0
   \   00000D   12....       LCALL   ??HalLcd_HW_WaitUs?relay
    528             LCD_RS = 0;// write the command
   \   000010   C297         CLR     0x90.7
    529             HalLcd_HW_WaitUs(1);
   \   000012                ; Setup parameters for call to function HalLcd_HW_WaitUs
   \   000012   7A01         MOV     R2,#0x1
   \   000014   7B00         MOV     R3,#0x0
   \   000016   12....       LCALL   ??HalLcd_HW_WaitUs?relay
    530             for(i = 0;i < 8;i++)
   \   000019   7E08         MOV     R6,#0x8
    531             {
    532                 LCD_CLK = 0;
   \                     ??HalLcd_HW_WriteCommand_0:
   \   00001B   C295         CLR     0x90.5
    533                 asm("nop");// a delay for waiting the peripheral
   \   00001D   00           nop
    534                // HalLcd_HW_WaitUs(2);
    535                 if(cmd & 0x80)
   \   00001E   EF           MOV     A,R7
   \   00001F   A2E7         MOV     C,0xE0 /* A   */.7
   \   000021   5004         JNC     ??HalLcd_HW_WriteCommand_1
    536                 {
    537                   LCD_DI = 1;
   \   000023   D296         SETB    0x90.6
   \   000025   8002         SJMP    ??HalLcd_HW_WriteCommand_2
    538                 }
    539                 else
    540                 {
    541                   LCD_DI = 0; 
   \                     ??HalLcd_HW_WriteCommand_1:
   \   000027   C296         CLR     0x90.6
    542                 }
    543                 //asm("nop");// a delay to set the data
    544                // asm("nop");
    545                // HalLcd_HW_WaitUs(2);
    546                 cmd = cmd << 1;
   \                     ??HalLcd_HW_WriteCommand_2:
   \   000029   C3           CLR     C
   \   00002A   33           RLC     A
   \   00002B   FF           MOV     R7,A
    547                 LCD_CLK = 1;
   \   00002C   D295         SETB    0x90.5
    548                 asm("nop");// a delay to hold the data
   \   00002E   00           nop
    549                 asm("nop"); 
   \   00002F   00           nop
    550                 HalLcd_HW_WaitUs(1);
   \   000030                ; Setup parameters for call to function HalLcd_HW_WaitUs
   \   000030   7A01         MOV     R2,#0x1
   \   000032   7B00         MOV     R3,#0x0
   \   000034   12....       LCALL   ??HalLcd_HW_WaitUs?relay
    551             }
   \   000037   1E           DEC     R6
   \   000038   EE           MOV     A,R6
   \   000039   70E0         JNZ     ??HalLcd_HW_WriteCommand_0
    552             LCD_CS = 1;
   \   00003B                REQUIRE ?Subroutine2
   \   00003B                REQUIRE _A_P2
   \   00003B                REQUIRE _A_P1
   \   00003B                ; // Fall through to label ?Subroutine2
    553             
    554          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   D2A0         SETB    0xa0.0
   \   000002   80..         SJMP    ??Subroutine9_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine9_0:
   \   000000   7F01         MOV     R7,#0x1
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
    555          
    556          /**************************************************************************************************
    557           * @fn      HalLcdWriteData to the LCD
    558           *
    559           * @brief   Write a data to the LCD
    560           *
    561           * @param  data-the data to be wrote
    562           *         
    563           *
    564           * @return  None
    565           **************************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    566          void HalLcd_HW_WriteData(uint8 data)
   \                     HalLcd_HW_WriteData:
    567          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
    568             uint8 i = 0;
    569             LCD_CS = 0; // to select the LCD
   \   000007   C2A0         CLR     0xa0.0
    570             HalLcd_HW_WaitUs(1);
   \   000009                ; Setup parameters for call to function HalLcd_HW_WaitUs
   \   000009   7A01         MOV     R2,#0x1
   \   00000B   7B00         MOV     R3,#0x0
   \   00000D   12....       LCALL   ??HalLcd_HW_WaitUs?relay
    571             LCD_RS = 1;// write data
   \   000010   D297         SETB    0x90.7
    572             HalLcd_HW_WaitUs(1);
   \   000012                ; Setup parameters for call to function HalLcd_HW_WaitUs
   \   000012   7A01         MOV     R2,#0x1
   \   000014   7B00         MOV     R3,#0x0
   \   000016   12....       LCALL   ??HalLcd_HW_WaitUs?relay
    573             for(i = 0;i < 8;i++)
   \   000019   7808         MOV     R0,#0x8
    574             {
    575                 LCD_CLK = 0;
   \                     ??HalLcd_HW_WriteData_0:
   \   00001B   C295         CLR     0x90.5
    576                 asm("nop");// a delay for waiting the peripheral
   \   00001D   00           nop
    577                // HalLcd_HW_WaitUs(1);
    578                 if(data & 0x80)
   \   00001E   EE           MOV     A,R6
   \   00001F   A2E7         MOV     C,0xE0 /* A   */.7
   \   000021   5004         JNC     ??HalLcd_HW_WriteData_1
    579                 {
    580                   LCD_DI = 1;
   \   000023   D296         SETB    0x90.6
   \   000025   8002         SJMP    ??HalLcd_HW_WriteData_2
    581                 }
    582                 else
    583                 {
    584                   LCD_DI = 0; 
   \                     ??HalLcd_HW_WriteData_1:
   \   000027   C296         CLR     0x90.6
    585                 }
    586                 asm("nop");// a delay to set the data
   \                     ??HalLcd_HW_WriteData_2:
   \   000029   00           nop
    587                 asm("nop");
   \   00002A   00           nop
    588                 //HalLcd_HW_WaitUs(1);
    589                 data = data << 1;
   \   00002B   C3           CLR     C
   \   00002C   33           RLC     A
   \   00002D   FE           MOV     R6,A
    590                 LCD_CLK = 1;
   \   00002E   D295         SETB    0x90.5
    591                // HalLcd_HW_WaitUs(1);
    592                 asm("nop");// a delay to hold the data
   \   000030   00           nop
    593                 asm("nop"); 
   \   000031   00           nop
    594             }
   \   000032   18           DEC     R0
   \   000033   E8           MOV     A,R0
   \   000034   70E5         JNZ     ??HalLcd_HW_WriteData_0
    595             LCD_CS = 1;//
   \   000036   80..         SJMP    ?Subroutine2
   \   000038                REQUIRE _A_P2
   \   000038                REQUIRE _A_P1
    596            // 
    597          }
    598          
    599          /**************************************************************************************************
    600           * @fn      HalLcd_HW_WriteAddr
    601           *
    602           * @brief   the address that to be wrote
    603           *
    604           * @param   page-the page of the lcd
    605           *          col - the column of the lcd
    606           *
    607           * @return  None
    608           **************************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    609          void HalLcd_HW_WriteAddr(uint8 page,uint8 col)
   \                     HalLcd_HW_WriteAddr:
    610          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
   \   000007   EA           MOV     A,R2
   \   000008   FF           MOV     R7,A
    611             HalLcd_HW_WriteCommand(page + 0xb0);// set the page address
   \   000009                ; Setup parameters for call to function HalLcd_HW_WriteCommand
   \   000009   74B0         MOV     A,#-0x50
   \   00000B   2E           ADD     A,R6
   \   00000C   F9           MOV     R1,A
   \   00000D   12....       LCALL   ??HalLcd_HW_WriteCommand?relay
    612             HalLcd_HW_WriteCommand(((col >> 4) & 0x0f) + 0x10);//set the column high four bit address
   \   000010                ; Setup parameters for call to function HalLcd_HW_WriteCommand
   \   000010   EF           MOV     A,R7
   \   000011   C4           SWAP    A
   \   000012   540F         ANL     A,#0xf
   \   000014   2410         ADD     A,#0x10
   \   000016   F9           MOV     R1,A
   \   000017   12....       LCALL   ??HalLcd_HW_WriteCommand?relay
    613             HalLcd_HW_WriteCommand(col & 0x0f);//set the column low four  bit address
   \   00001A                ; Setup parameters for call to function HalLcd_HW_WriteCommand
   \   00001A   740F         MOV     A,#0xf
   \   00001C   5F           ANL     A,R7
   \   00001D   F9           MOV     R1,A
   \   00001E   12....       LCALL   ??HalLcd_HW_WriteCommand?relay
    614          }
   \   000021   80..         SJMP    ??Subroutine9_0
    615          
    616          /**************************************************************************************************
    617           * @fn      HalLcd_HW_Clear
    618           *
    619           * @brief   Clear the HW LCD
    620           *
    621           * @param   None
    622           *
    623           * @return  None
    624           **************************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    625          void HalLcd_HW_Clear(void)
   \                     HalLcd_HW_Clear:
    626          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
    627            uint8 i = 0;
    628            uint8 page = 0;
    629            for(page = 0 ;page < 8; page++)
   \   000005   7E00         MOV     R6,#0x0
    630            {
    631              HalLcd_HW_WriteAddr(page,0);
   \                     ??HalLcd_HW_Clear_0:
   \   000007                ; Setup parameters for call to function HalLcd_HW_WriteAddr
   \   000007   7A00         MOV     R2,#0x0
   \   000009   EE           MOV     A,R6
   \   00000A   F9           MOV     R1,A
   \   00000B   12....       LCALL   ??HalLcd_HW_WriteAddr?relay
    632              for(i = 0; i < 128; i++)
   \   00000E   7F80         MOV     R7,#-0x80
    633              {
    634                HalLcd_HW_WriteData(0x00);
   \                     ??HalLcd_HW_Clear_1:
   \   000010                ; Setup parameters for call to function HalLcd_HW_WriteData
   \   000010   7900         MOV     R1,#0x0
   \   000012   12....       LCALL   ??HalLcd_HW_WriteData?relay
    635              }  
   \   000015   1F           DEC     R7
   \   000016   EF           MOV     A,R7
   \   000017   70F7         JNZ     ??HalLcd_HW_Clear_1
    636            }
   \   000019   0E           INC     R6
   \   00001A   EE           MOV     A,R6
   \   00001B   C3           CLR     C
   \   00001C   9408         SUBB    A,#0x8
   \   00001E   40E7         JC      ??HalLcd_HW_Clear_0
    637          }
   \   000020   80..         SJMP    ??Subroutine9_0
    638          
    639          /**************************************************************************************************
    640           * @fn      HalLcdWriteChar
    641           *
    642           * @brief   Write a string to the LCD
    643           *
    644           * @param   chr  - char that will be displayed 
    645           *        
    646           *          page - the place to display
    647           *          
    648           *          col  - the column to display
    649          
    650                      clear - true write the char,false clear the area
    651           * @return  None
    652           **************************************************************************************************/
    653          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    654          void HalLcdWriteChar5x8( uint8 chr,uint8 page,uint8 col,bool clear)
   \                     HalLcdWriteChar5x8:
    655          {
   \   000000   74F3         MOV     A,#-0xd
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 13
   \   000005                ; Auto size: 0
   \   000005   89..         MOV     ?V0 + 3,R1
   \   000007   EA           MOV     A,R2
   \   000008   FF           MOV     R7,A
   \   000009   EB           MOV     A,R3
   \   00000A   8C..         MOV     ?V0 + 4,R4
    656            
    657             HalLcd_HW_WriteAddr(page,col);
   \   00000C                ; Setup parameters for call to function HalLcd_HW_WriteAddr
   \   00000C   FA           MOV     R2,A
   \   00000D   EF           MOV     A,R7
   \   00000E   F9           MOV     R1,A
   \   00000F   12....       LCALL   ??HalLcd_HW_WriteAddr?relay
    658             uint8 i = 0;
    659             uint8 data = 0;
    660             for(i = 0; i < 5; i++)
   \   000012   75..00       MOV     ?V0 + 2,#0x0
    661             {
    662                data =  ASCII_CODE[5 * chr + i];
    663                if(clear)
   \                     ??HalLcdWriteChar5x8_0:
   \   000015   E5..         MOV     A,?V0 + 4
   \   000017   601A         JZ      ??HalLcdWriteChar5x8_1
    664                  HalLcd_HW_WriteData(data);
   \   000019                ; Setup parameters for call to function HalLcd_HW_WriteData
   \   000019   E5..         MOV     A,?V0 + 3
   \   00001B   75F005       MOV     B,#0x5
   \   00001E   A4           MUL     AB
   \   00001F   85....       MOV     ?V0 + 0,?V0 + 2
   \   000022   12....       LCALL   ?Subroutine8 & 0xFFFF
   \                     ??CrossCallReturnLabel_4:
   \   000025   74..         MOV     A,#ASCII_CODE & 0xff
   \   000027   28           ADD     A,R0
   \   000028   F582         MOV     DPL,A
   \   00002A   74..         MOV     A,#(ASCII_CODE >> 8) & 0xff
   \   00002C   39           ADDC    A,R1
   \   00002D   F583         MOV     DPH,A
   \   00002F   E0           MOVX    A,@DPTR
   \   000030   F9           MOV     R1,A
   \   000031   8002         SJMP    ??HalLcdWriteChar5x8_2
    665                else
    666                  HalLcd_HW_WriteData(0x00);
   \                     ??HalLcdWriteChar5x8_1:
   \   000033                ; Setup parameters for call to function HalLcd_HW_WriteData
   \   000033   7900         MOV     R1,#0x0
   \                     ??HalLcdWriteChar5x8_2:
   \   000035   12....       LCALL   ??HalLcd_HW_WriteData?relay
    667             }
   \   000038   05..         INC     ?V0 + 2
   \   00003A   E5..         MOV     A,?V0 + 2
   \   00003C   C3           CLR     C
   \   00003D   9405         SUBB    A,#0x5
   \   00003F   40D4         JC      ??HalLcdWriteChar5x8_0
    668          }
   \   000041                REQUIRE ?Subroutine1
   \   000041                ; // Fall through to label ?Subroutine1

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   7F05         MOV     R7,#0x5
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine8:
   \   000000   25..         ADD     A,?V0 + 0
   \   000002   F8           MOV     R0,A
   \   000003   E5F0         MOV     A,B
   \   000005   3400         ADDC    A,#0x0
   \   000007   F9           MOV     R1,A
   \   000008   22           RET
    669          
    670          /**************************************************************************************************
    671           * @fn      HalLcdWriteString
    672           *
    673           * @brief   Write a string to the LCD
    674           *
    675           * @param   title  - Title that will be displayed 
    676           *        
    677           *          len   - the lenght of the string
    678           *
    679           * @return  None
    680           **************************************************************************************************/
    681          
    682          /*void HalLcdWriteString5x8( uint8* str, uint8 len, uint8 page, uint8 col)
    683          {
    684             uint8 i = 0;
    685             for(i = 0; i < len; i++)
    686             {
    687               HalLcdWriteChar5x8(str[i],page,col);
    688               col += 5;
    689               if(col >= 125)
    690               {
    691                 col = 0;
    692                 page++;
    693                 if(page >= 8)
    694                 {
    695                   page = 0;
    696                 }
    697               }
    698               
    699             }
    700          }*/
    701          /**************************************************************************************************
    702           * @fn      HalLcd_HW_LoadPicture
    703           *
    704           * @brief   Load a picture with the height x width size,and the start point is (x,y). 
    705           *
    706           * @param   pic  - The picture to be displayed 
    707           *        
    708           *          height - the height of the picture
    709           *
    710           *          width - the width of the picture
    711           *
    712           *          x - the x coordinate of the start point
    713           *
    714           *          y - the y coordinate of the start point
    715           *
    716           *          clear - FALSE to clear the area,TRUE to wite the area;
    717           * @return  None
    718           **************************************************************************************************/
    719          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    720          void HalLcd_HW_LoadPicture(const uint8 * pic,uint8 height, uint8 width,uint8 start_x, 
   \                     HalLcd_HW_LoadPicture:
    721                                     uint8 start_y,bool clear)
    722          {
   \   000000   74EE         MOV     A,#-0x12
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 18
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
   \   000009   8C..         MOV     ?V0 + 8,R4
   \   00000B   8D..         MOV     ?V0 + 7,R5
   \   00000D   7412         MOV     A,#0x12
   \   00000F   12....       LCALL   ?XSTACK_DISP0_8
   \   000012   E0           MOVX    A,@DPTR
   \   000013   F8           MOV     R0,A
   \   000014   7413         MOV     A,#0x13
   \   000016   12....       LCALL   ?XSTACK_DISP0_8
   \   000019   E0           MOVX    A,@DPTR
   \   00001A   F5..         MOV     ?V0 + 4,A
    723             uint8 start_page = start_y / 8;
   \   00001C   E8           MOV     A,R0
   \   00001D   13           RRC     A
   \   00001E   13           RRC     A
   \   00001F   13           RRC     A
   \   000020   541F         ANL     A,#0x1f
   \   000022   F5..         MOV     ?V0 + 5,A
    724             uint8 start_col = start_x;// the address of the start point
    725             uint8 page_count = height / 8; // the count of page that the picture occupies
   \   000024   E9           MOV     A,R1
   \   000025   13           RRC     A
   \   000026   13           RRC     A
   \   000027   13           RRC     A
   \   000028   541F         ANL     A,#0x1f
   \   00002A   F5..         MOV     ?V0 + 6,A
    726             uint8 i = 0, j = 0;
    727             for(i = 0; i < page_count; i++)
   \   00002C   75..00       MOV     ?V0 + 2,#0x0
   \   00002F   8002         SJMP    ??HalLcd_HW_LoadPicture_0
   \                     ??HalLcd_HW_LoadPicture_1:
   \   000031   05..         INC     ?V0 + 2
   \                     ??HalLcd_HW_LoadPicture_0:
   \   000033   E5..         MOV     A,?V0 + 2
   \   000035   C3           CLR     C
   \   000036   95..         SUBB    A,?V0 + 6
   \   000038   503C         JNC     ??HalLcd_HW_LoadPicture_2
    728             {
    729               HalLcd_HW_WriteAddr(i + start_page,start_col);
   \   00003A                ; Setup parameters for call to function HalLcd_HW_WriteAddr
   \   00003A   AA..         MOV     R2,?V0 + 7
   \   00003C   E5..         MOV     A,?V0 + 2
   \   00003E   25..         ADD     A,?V0 + 5
   \   000040   F9           MOV     R1,A
   \   000041   12....       LCALL   ??HalLcd_HW_WriteAddr?relay
    730               for(j = 0; j < width; j++)
   \   000044   75..00       MOV     ?V0 + 9,#0x0
   \   000047   8007         SJMP    ??HalLcd_HW_LoadPicture_3
    731               {
    732                  if(clear)
    733                  HalLcd_HW_WriteData(pic[i * width + j]);
    734                  else
    735                  HalLcd_HW_WriteData(0x00);
   \                     ??HalLcd_HW_LoadPicture_4:
   \   000049                ; Setup parameters for call to function HalLcd_HW_WriteData
   \   000049   7900         MOV     R1,#0x0
   \                     ??HalLcd_HW_LoadPicture_5:
   \   00004B   12....       LCALL   ??HalLcd_HW_WriteData?relay
   \   00004E   05..         INC     ?V0 + 9
   \                     ??HalLcd_HW_LoadPicture_3:
   \   000050   E5..         MOV     A,?V0 + 9
   \   000052   C3           CLR     C
   \   000053   95..         SUBB    A,?V0 + 8
   \   000055   50DA         JNC     ??HalLcd_HW_LoadPicture_1
   \   000057   E5..         MOV     A,?V0 + 4
   \   000059   60EE         JZ      ??HalLcd_HW_LoadPicture_4
   \   00005B                ; Setup parameters for call to function HalLcd_HW_WriteData
   \   00005B   85....       MOV     ?V0 + 0,?V0 + 8
   \   00005E   E5..         MOV     A,?V0 + 2
   \   000060   85..F0       MOV     B,?V0 + 0
   \   000063   A4           MUL     AB
   \   000064   85....       MOV     ?V0 + 0,?V0 + 9
   \   000067   12....       LCALL   ?Subroutine8 & 0xFFFF
    736               }
    737               
    738             }
   \                     ??CrossCallReturnLabel_5:
   \   00006A   EE           MOV     A,R6
   \   00006B   28           ADD     A,R0
   \   00006C   F582         MOV     DPL,A
   \   00006E   EF           MOV     A,R7
   \   00006F   39           ADDC    A,R1
   \   000070   F583         MOV     DPH,A
   \   000072   E0           MOVX    A,@DPTR
   \   000073   F9           MOV     R1,A
   \   000074   80D5         SJMP    ??HalLcd_HW_LoadPicture_5
    739          }
   \                     ??HalLcd_HW_LoadPicture_2:
   \   000076   7F0A         MOV     R7,#0xa
   \   000078   02....       LJMP    ?BANKED_LEAVE_XDATA
    740          
    741          /************************************************************** 
    742           * @fn      HalLcd_HW_WriteST
    743           *
    744           * @brief   Load the set temperature label picture
    745           *
    746           * @param   power - ture to load ,false to clear
    747           *
    748           * @return  None  
    749           *
    750          **************************************************************/
    751          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   12....       LCALL   ??Subroutine13_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_20:
   \   000003   12....       LCALL   ?DEALLOC_XSTACK8
   \   000006                REQUIRE ??Subroutine9_0
   \   000006                ; // Fall through to label ??Subroutine9_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    752          void HalLcd_HW_WriteST(bool power)
   \                     HalLcd_HW_WriteST:
    753          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
    754              HalLcd_HW_LoadPicture(ST_PIC,16,15,61,0,power); 
   \   000006                ; Setup parameters for call to function HalLcd_HW_LoadPicture
   \   000006   F5..         MOV     ?V0 + 0,A
   \   000008   78..         MOV     R0,#?V0 + 0
   \   00000A   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00000D   75..00       MOV     ?V0 + 0,#0x0
   \   000010   78..         MOV     R0,#?V0 + 0
   \   000012   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000015   7D3D         MOV     R5,#0x3d
   \   000017   7C0F         MOV     R4,#0xf
   \   000019   7910         MOV     R1,#0x10
   \   00001B   7A..         MOV     R2,#ST_PIC & 0xff
   \   00001D   7B..         MOV     R3,#(ST_PIC >> 8) & 0xff
   \   00001F   02....       LJMP    ?Subroutine0 & 0xFFFF
    755          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine13_0:
   \   000000   12....       LCALL   ??HalLcd_HW_LoadPicture?relay
   \   000003   7402         MOV     A,#0x2
   \   000005   22           RET
    756          
    757          /************************************************************** 
    758           * @fn      HalLcd_HW_WriteSTU
    759           *
    760           * @brief   Load the set temperature unit label picture
    761           *
    762           * @param   power - power - ture to load ,false to clear
    763           *
    764           * @return  None  
    765           *
    766          **************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    767          void HalLcd_HW_WriteSTU(bool power)
   \                     HalLcd_HW_WriteSTU:
    768          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
    769            if(power)
   \   000006   6022         JZ      ??HalLcd_HW_WriteSTU_0
    770            HalLcd_HW_LoadPicture((uint8 *)ST_Unit,16,10,112,8,TRUE);
   \   000008                ; Setup parameters for call to function HalLcd_HW_LoadPicture
   \   000008   75..01       MOV     ?V0 + 0,#0x1
   \   00000B   78..         MOV     R0,#?V0 + 0
   \   00000D   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000010   75..08       MOV     ?V0 + 0,#0x8
   \   000013   78..         MOV     R0,#?V0 + 0
   \   000015   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000018   7D70         MOV     R5,#0x70
   \   00001A   7C0A         MOV     R4,#0xa
   \   00001C   7910         MOV     R1,#0x10
   \   00001E   7A..         MOV     R2,#ST_Unit & 0xff
   \   000020   7B..         MOV     R3,#(ST_Unit >> 8) & 0xff
   \   000022   12....       LCALL   ??Subroutine13_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_21:
   \   000025   12....       LCALL   ?DEALLOC_XSTACK8
   \   000028   802E         SJMP    ??HalLcd_HW_WriteSTU_1
    771            else
    772            {
    773              HalLcd_HW_LoadPicture((uint8 *)ST_Unit,16,10,112,8,FALSE);
   \                     ??HalLcd_HW_WriteSTU_0:
   \   00002A                ; Setup parameters for call to function HalLcd_HW_LoadPicture
   \   00002A   75..00       MOV     ?V0 + 0,#0x0
   \   00002D   78..         MOV     R0,#?V0 + 0
   \   00002F   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000032   75..08       MOV     ?V0 + 0,#0x8
   \   000035   78..         MOV     R0,#?V0 + 0
   \   000037   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00003A   7D70         MOV     R5,#0x70
   \   00003C   7C0A         MOV     R4,#0xa
   \   00003E   7910         MOV     R1,#0x10
   \   000040   7A..         MOV     R2,#ST_Unit & 0xff
   \   000042   7B..         MOV     R3,#(ST_Unit >> 8) & 0xff
   \   000044   12....       LCALL   ??Subroutine13_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_22:
   \   000047   12....       LCALL   ?DEALLOC_XSTACK8
    774              HalLcd_HW_WriteAddr(2,112);
   \   00004A                ; Setup parameters for call to function HalLcd_HW_WriteAddr
   \   00004A   7A70         MOV     R2,#0x70
   \   00004C   7902         MOV     R1,#0x2
   \   00004E   12....       LCALL   ??HalLcd_HW_WriteAddr?relay
    775              for(uint8 i = 0; i < 10; i++)
   \   000051   7E0A         MOV     R6,#0xa
    776              {
    777                HalLcd_HW_WriteData(0x80);
   \                     ??HalLcd_HW_WriteSTU_2:
   \   000053                ; Setup parameters for call to function HalLcd_HW_WriteData
   \   000053   12....       LCALL   ?Subroutine5 & 0xFFFF
    778              }
    779            }
   \                     ??CrossCallReturnLabel_6:
   \   000056   70FB         JNZ     ??HalLcd_HW_WriteSTU_2
    780          }
   \                     ??HalLcd_HW_WriteSTU_1:
   \   000058   02....       LJMP    ??Subroutine9_0 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine5:
   \   000000   7980         MOV     R1,#-0x80
   \   000002                REQUIRE ??Subroutine10_0
   \   000002                ; // Fall through to label ??Subroutine10_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine10_0:
   \   000000   12....       LCALL   ??HalLcd_HW_WriteData?relay
   \   000003   1E           DEC     R6
   \   000004   EE           MOV     A,R6
   \   000005   22           RET
    781          
    782          /************************************************************** 
    783           * @fn      HalLcd_HW_WriteRTU
    784           *
    785           * @brief   Load the real temperature unit label picture
    786           *
    787           * @param   None
    788           *
    789           * @return  None  
    790           *
    791          **************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    792          void HalLcd_HW_WriteRTU(void)
   \                     HalLcd_HW_WriteRTU:
    793          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
    794            HalLcd_HW_LoadPicture(RT_Unit,16,11,111,48,TRUE);
   \   000005                ; Setup parameters for call to function HalLcd_HW_LoadPicture
   \   000005   75..01       MOV     ?V0 + 0,#0x1
   \   000008   78..         MOV     R0,#?V0 + 0
   \   00000A   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00000D   75..30       MOV     ?V0 + 0,#0x30
   \   000010   78..         MOV     R0,#?V0 + 0
   \   000012   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000015   7D6F         MOV     R5,#0x6f
   \   000017   7C0B         MOV     R4,#0xb
   \   000019   7910         MOV     R1,#0x10
   \   00001B   7A..         MOV     R2,#RT_Unit & 0xff
   \   00001D   7B..         MOV     R3,#(RT_Unit >> 8) & 0xff
   \   00001F   02....       LJMP    ?Subroutine0 & 0xFFFF
    795          }
    796          
    797          /************************************************************** 
    798           * @fn      HalLcdWriteWiFiMod
    799           *
    800           * @brief   Load the wifi mod picture according to the mod
    801           *
    802           * @param   mod - the mode of the wifi
    803           *
    804           * @return  None  
    805           *
    806          **************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    807          void HalLcdWriteWiFiMod(uint8 mod)
   \                     HalLcdWriteWiFiMod:
    808          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
    809            switch (mod)
   \   000006   600B         JZ      ??HalLcdWriteWiFiMod_0
   \   000008   14           DEC     A
   \   000009   6024         JZ      ??HalLcdWriteWiFiMod_1
   \   00000B   14           DEC     A
   \   00000C   603D         JZ      ??HalLcdWriteWiFiMod_2
   \   00000E   14           DEC     A
   \   00000F   6056         JZ      ??HalLcdWriteWiFiMod_3
   \   000011   8074         SJMP    ??HalLcdWriteWiFiMod_4
    810            {
    811            case 0:
    812              HalLcd_HW_LoadPicture(WiFi,24,27,1,0,TRUE);
   \                     ??HalLcdWriteWiFiMod_0:
   \   000013                ; Setup parameters for call to function HalLcd_HW_LoadPicture
   \   000013   75..01       MOV     ?V0 + 0,#0x1
   \   000016   78..         MOV     R0,#?V0 + 0
   \   000018   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00001B   75..00       MOV     ?V0 + 0,#0x0
   \   00001E   78..         MOV     R0,#?V0 + 0
   \   000020   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000023   7D01         MOV     R5,#0x1
   \   000025   7C1B         MOV     R4,#0x1b
   \   000027   7918         MOV     R1,#0x18
   \   000029   7A..         MOV     R2,#WiFi & 0xff
   \   00002B   7B..         MOV     R3,#(WiFi >> 8) & 0xff
   \   00002D   8052         SJMP    ??HalLcdWriteWiFiMod_5
    813              break;
    814            case 1:
    815              HalLcd_HW_LoadPicture(WiFi_1,24,27,1,0,TRUE);
   \                     ??HalLcdWriteWiFiMod_1:
   \   00002F                ; Setup parameters for call to function HalLcd_HW_LoadPicture
   \   00002F   75..01       MOV     ?V0 + 0,#0x1
   \   000032   78..         MOV     R0,#?V0 + 0
   \   000034   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000037   75..00       MOV     ?V0 + 0,#0x0
   \   00003A   78..         MOV     R0,#?V0 + 0
   \   00003C   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00003F   7D01         MOV     R5,#0x1
   \   000041   7C1B         MOV     R4,#0x1b
   \   000043   7918         MOV     R1,#0x18
   \   000045   7A..         MOV     R2,#WiFi_1 & 0xff
   \   000047   7B..         MOV     R3,#(WiFi_1 >> 8) & 0xff
   \   000049   8036         SJMP    ??HalLcdWriteWiFiMod_5
    816              break;
    817            case 2:
    818              HalLcd_HW_LoadPicture(WiFi_2,24,27,1,0,TRUE);
   \                     ??HalLcdWriteWiFiMod_2:
   \   00004B                ; Setup parameters for call to function HalLcd_HW_LoadPicture
   \   00004B   75..01       MOV     ?V0 + 0,#0x1
   \   00004E   78..         MOV     R0,#?V0 + 0
   \   000050   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000053   75..00       MOV     ?V0 + 0,#0x0
   \   000056   78..         MOV     R0,#?V0 + 0
   \   000058   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00005B   7D01         MOV     R5,#0x1
   \   00005D   7C1B         MOV     R4,#0x1b
   \   00005F   7918         MOV     R1,#0x18
   \   000061   7A..         MOV     R2,#WiFi_2 & 0xff
   \   000063   7B..         MOV     R3,#(WiFi_2 >> 8) & 0xff
   \   000065   801A         SJMP    ??HalLcdWriteWiFiMod_5
    819              break;
    820            case 3:
    821              HalLcd_HW_LoadPicture(WiFi_3,24,27,1,0,TRUE);
   \                     ??HalLcdWriteWiFiMod_3:
   \   000067                ; Setup parameters for call to function HalLcd_HW_LoadPicture
   \   000067   75..01       MOV     ?V0 + 0,#0x1
   \   00006A   78..         MOV     R0,#?V0 + 0
   \   00006C   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00006F   75..00       MOV     ?V0 + 0,#0x0
   \   000072   78..         MOV     R0,#?V0 + 0
   \   000074   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000077   7D01         MOV     R5,#0x1
   \   000079   7C1B         MOV     R4,#0x1b
   \   00007B   7918         MOV     R1,#0x18
   \   00007D   7A..         MOV     R2,#WiFi_3 & 0xff
   \   00007F   7B..         MOV     R3,#(WiFi_3 >> 8) & 0xff
   \                     ??HalLcdWriteWiFiMod_5:
   \   000081   12....       LCALL   ??Subroutine13_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_23:
   \   000084   12....       LCALL   ?DEALLOC_XSTACK8
    822              break;
    823            default:
    824              break;
    825            }
    826          }
   \                     ??HalLcdWriteWiFiMod_4:
   \   000087   02....       LJMP    ??Subroutine9_0 & 0xFFFF
    827          
    828          /************************************************************** 
    829           * @fn      HalLcdWriteSetTemperature
    830           *
    831           * @brief   Load the set temperature label picture
    832           *
    833           * @param   temper - the temperature to be display
    834           *
    835           *          power - true to load the picture,false to clear       
    836           *
    837           * @return  None  
    838           *
    839          **************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    840          void HalLcdWriteSetTemperature(uint8 temper,bool power)
   \                     HalLcdWriteSetTemperature:
    841          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
   \   000007   EA           MOV     A,R2
   \   000008   FF           MOV     R7,A
    842            uint8 ten = temper / 10;
   \   000009   75F00A       MOV     B,#0xa
   \   00000C   EE           MOV     A,R6
   \   00000D   84           DIV     AB
   \   00000E   FA           MOV     R2,A
    843            uint8 one = temper % 10;
   \   00000F   EE           MOV     A,R6
   \   000010   75F00A       MOV     B,#0xa
   \   000013   84           DIV     AB
   \   000014   E5F0         MOV     A,B
   \   000016   F5..         MOV     ?V0 + 0,A
    844            if(power)
   \   000018   EF           MOV     A,R7
   \   000019   6035         JZ      ??HalLcdWriteSetTemperature_0
    845            {
    846              // write the higher bit of the temperatue
    847              HalLcd_HW_LoadPicture(&STCODE[ten * 36],24,12,81,0,TRUE);
   \   00001B                ; Setup parameters for call to function HalLcd_HW_LoadPicture
   \   00001B   75..01       MOV     ?V0 + 1,#0x1
   \   00001E   78..         MOV     R0,#?V0 + 1
   \   000020   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000023   75..00       MOV     ?V0 + 1,#0x0
   \   000026   78..         MOV     R0,#?V0 + 1
   \   000028   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00002B   7D51         MOV     R5,#0x51
   \   00002D   7C0C         MOV     R4,#0xc
   \   00002F   7918         MOV     R1,#0x18
   \   000031   EA           MOV     A,R2
   \   000032   12....       LCALL   ??Subroutine12_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_18:
   \   000035   12....       LCALL   ?DEALLOC_XSTACK8
    848              // write the low bit of the temperatue
    849              HalLcd_HW_LoadPicture(&STCODE[one * 36],24,12,98,0,TRUE);
   \   000038                ; Setup parameters for call to function HalLcd_HW_LoadPicture
   \   000038   75..01       MOV     ?V0 + 1,#0x1
   \   00003B   78..         MOV     R0,#?V0 + 1
   \   00003D   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000040   75..00       MOV     ?V0 + 1,#0x0
   \   000043   78..         MOV     R0,#?V0 + 1
   \   000045   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000048   12....       LCALL   ?Subroutine3 & 0xFFFF
    850            }
   \                     ??CrossCallReturnLabel_16:
   \   00004B   12....       LCALL   ?DEALLOC_XSTACK8
   \   00004E   8057         SJMP    ??HalLcdWriteSetTemperature_1
    851            else
    852            {
    853              // write the higher bit of the temperatue
    854              HalLcd_HW_LoadPicture(&STCODE[ten * 36],24,12,81,0,FALSE);
   \                     ??HalLcdWriteSetTemperature_0:
   \   000050                ; Setup parameters for call to function HalLcd_HW_LoadPicture
   \   000050   75..00       MOV     ?V0 + 1,#0x0
   \   000053   78..         MOV     R0,#?V0 + 1
   \   000055   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000058   78..         MOV     R0,#?V0 + 1
   \   00005A   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00005D   7D51         MOV     R5,#0x51
   \   00005F   7C0C         MOV     R4,#0xc
   \   000061   7918         MOV     R1,#0x18
   \   000063   EA           MOV     A,R2
   \   000064   12....       LCALL   ??Subroutine12_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_19:
   \   000067   12....       LCALL   ?DEALLOC_XSTACK8
    855              HalLcd_HW_WriteAddr(2,81);// reload the line
   \   00006A                ; Setup parameters for call to function HalLcd_HW_WriteAddr
   \   00006A   7A51         MOV     R2,#0x51
   \   00006C   7902         MOV     R1,#0x2
   \   00006E   12....       LCALL   ??HalLcd_HW_WriteAddr?relay
    856              for(uint8 i = 0; i < 12; i++)
   \   000071   75..0C       MOV     ?V0 + 1,#0xc
    857              {
    858                 HalLcd_HW_WriteData(0x80);
   \                     ??HalLcdWriteSetTemperature_2:
   \   000074                ; Setup parameters for call to function HalLcd_HW_WriteData
   \   000074   7980         MOV     R1,#-0x80
   \   000076   12....       LCALL   ??HalLcd_HW_WriteData?relay
    859              }
   \   000079   15..         DEC     ?V0 + 1
   \   00007B   E5..         MOV     A,?V0 + 1
   \   00007D   70F5         JNZ     ??HalLcdWriteSetTemperature_2
    860              // write the low bit of the temperatue
    861              HalLcd_HW_LoadPicture(&STCODE[one * 36],24,12,98,0,FALSE);
   \   00007F                ; Setup parameters for call to function HalLcd_HW_LoadPicture
   \   00007F   75..00       MOV     ?V0 + 1,#0x0
   \   000082   78..         MOV     R0,#?V0 + 1
   \   000084   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000087   78..         MOV     R0,#?V0 + 1
   \   000089   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00008C   12....       LCALL   ?Subroutine3 & 0xFFFF
   \                     ??CrossCallReturnLabel_17:
   \   00008F   12....       LCALL   ?DEALLOC_XSTACK8
    862              HalLcd_HW_WriteAddr(2,98);  // reload the line 
   \   000092                ; Setup parameters for call to function HalLcd_HW_WriteAddr
   \   000092   7A62         MOV     R2,#0x62
   \   000094   7902         MOV     R1,#0x2
   \   000096   12....       LCALL   ??HalLcd_HW_WriteAddr?relay
    863              for(uint8 i = 0; i < 12; i++)
   \   000099   75..0C       MOV     ?V0 + 0,#0xc
    864              {
    865                 HalLcd_HW_WriteData(0x80);
   \                     ??HalLcdWriteSetTemperature_3:
   \   00009C                ; Setup parameters for call to function HalLcd_HW_WriteData
   \   00009C   7980         MOV     R1,#-0x80
   \   00009E   12....       LCALL   ??HalLcd_HW_WriteData?relay
    866              }
   \   0000A1   15..         DEC     ?V0 + 0
   \   0000A3   E5..         MOV     A,?V0 + 0
   \   0000A5   70F5         JNZ     ??HalLcdWriteSetTemperature_3
    867              
    868            }
    869            
    870            
    871          }
   \                     ??HalLcdWriteSetTemperature_1:
   \   0000A7   7F02         MOV     R7,#0x2
   \   0000A9   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   7D62         MOV     R5,#0x62
   \   000002   7C0C         MOV     R4,#0xc
   \   000004   7918         MOV     R1,#0x18
   \   000006   E5..         MOV     A,?V0 + 0
   \   000008                REQUIRE ??Subroutine12_0
   \   000008                ; // Fall through to label ??Subroutine12_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine12_0:
   \   000000   75F024       MOV     B,#0x24
   \   000003   A4           MUL     AB
   \   000004   FA           MOV     R2,A
   \   000005   ABF0         MOV     R3,B
   \   000007   74..         MOV     A,#STCODE & 0xff
   \   000009   2A           ADD     A,R2
   \   00000A   FA           MOV     R2,A
   \   00000B   74..         MOV     A,#(STCODE >> 8) & 0xff
   \   00000D   3B           ADDC    A,R3
   \   00000E   FB           MOV     R3,A
   \   00000F                REQUIRE ??Subroutine13_0
   \   00000F                ; // Fall through to label ??Subroutine13_0
    872          
    873          /************************************************************** 
    874           * @fn      HalLcdWriteEndMod
    875           *
    876           * @brief   Load the enddevice mode picture
    877           *
    878           * @param   MOD - ture to be automatic,false to be manual
    879           *
    880           * @return  None  
    881           *
    882          **************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    883          void HalLcdWriteEndMod(bool MOD)
   \                     HalLcdWriteEndMod:
    884          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
    885             if(MOD)
   \   000006   6005         JZ      ??HalLcdWriteEndMod_0
    886             HalLcd_HW_LoadPicture(Auto,16,30,2,24,TRUE);
   \   000008                ; Setup parameters for call to function HalLcd_HW_LoadPicture
   \   000008   75..01       MOV     ?V0 + 0,#0x1
   \   00000B   8003         SJMP    ??HalLcdWriteEndMod_1
    887             else
    888             HalLcd_HW_LoadPicture(Auto,16,30,2,24,FALSE);
   \                     ??HalLcdWriteEndMod_0:
   \   00000D                ; Setup parameters for call to function HalLcd_HW_LoadPicture
   \   00000D   75..00       MOV     ?V0 + 0,#0x0
   \                     ??HalLcdWriteEndMod_1:
   \   000010   78..         MOV     R0,#?V0 + 0
   \   000012   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000015   75..18       MOV     ?V0 + 0,#0x18
   \   000018   78..         MOV     R0,#?V0 + 0
   \   00001A   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00001D   7D02         MOV     R5,#0x2
   \   00001F   7C1E         MOV     R4,#0x1e
   \   000021   7910         MOV     R1,#0x10
   \   000023   7A..         MOV     R2,#Auto & 0xff
   \   000025   7B..         MOV     R3,#(Auto >> 8) & 0xff
   \   000027   02....       LJMP    ?Subroutine0 & 0xFFFF
    889          }
    890          
    891          /************************************************************** 
    892           * @fn      HalLcdWriteRealTempeMod
    893           *
    894           * @brief   Load the real temperature mod label picture
    895           *
    896           * @param   mod - True the temperature is the room temperature, false to be the 
    897           * floor's
    898           *
    899           * @return  None  
    900           *
    901          **************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    902          void HalLcdWriteRealTempeMod(bool  mod)
   \                     HalLcdWriteRealTempeMod:
    903          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
    904            if(mod)
   \   000006   75..01       MOV     ?V0 + 0,#0x1
   \   000009   78..         MOV     R0,#?V0 + 0
   \   00000B   6017         JZ      ??HalLcdWriteRealTempeMod_0
    905              HalLcd_HW_LoadPicture(RT,24,17,8,40,TRUE); 
   \   00000D                ; Setup parameters for call to function HalLcd_HW_LoadPicture
   \   00000D   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000010   75..28       MOV     ?V0 + 0,#0x28
   \   000013   78..         MOV     R0,#?V0 + 0
   \   000015   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000018   7D08         MOV     R5,#0x8
   \   00001A   7C11         MOV     R4,#0x11
   \   00001C   7918         MOV     R1,#0x18
   \   00001E   7A..         MOV     R2,#RT & 0xff
   \   000020   7B..         MOV     R3,#(RT >> 8) & 0xff
   \   000022   8015         SJMP    ??HalLcdWriteRealTempeMod_1
    906            else
    907              HalLcd_HW_LoadPicture(FT,24,17,8,40,TRUE); 
   \                     ??HalLcdWriteRealTempeMod_0:
   \   000024                ; Setup parameters for call to function HalLcd_HW_LoadPicture
   \   000024   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000027   75..28       MOV     ?V0 + 0,#0x28
   \   00002A   78..         MOV     R0,#?V0 + 0
   \   00002C   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00002F   7D08         MOV     R5,#0x8
   \   000031   7C11         MOV     R4,#0x11
   \   000033   7918         MOV     R1,#0x18
   \   000035   7A..         MOV     R2,#FT & 0xff
   \   000037   7B..         MOV     R3,#(FT >> 8) & 0xff
   \                     ??HalLcdWriteRealTempeMod_1:
   \   000039   02....       LJMP    ?Subroutine0 & 0xFFFF
    908          }
    909          /************************************************************** 
    910           * @fn      HalLcdWriteRealTemperature
    911           *
    912           * @brief   Load the real temperature picture
    913           *
    914           * @param   temper-temperature to display
    915           *
    916           * @return  None  
    917           *
    918          **************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    919          void HalLcdWriteRealTemperature(uint16 temper)
   \                     HalLcdWriteRealTemperature:
    920          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    921            uint8 hun = temper / 100;
    922            uint8 ten = temper % 100 / 10;
    923            uint8 one = temper % 10;
    924            HalLcd_HW_LoadPicture(&RTCODE[hun * 85],40,17,39,24,TRUE);
   \   000009                ; Setup parameters for call to function HalLcd_HW_LoadPicture
   \   000009   75..01       MOV     ?V0 + 0,#0x1
   \   00000C   78..         MOV     R0,#?V0 + 0
   \   00000E   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000011   75..18       MOV     ?V0 + 0,#0x18
   \   000014   78..         MOV     R0,#?V0 + 0
   \   000016   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000019   7D27         MOV     R5,#0x27
   \   00001B   7C11         MOV     R4,#0x11
   \   00001D   EE           MOV     A,R6
   \   00001E   F8           MOV     R0,A
   \   00001F   EF           MOV     A,R7
   \   000020   F9           MOV     R1,A
   \   000021   7A64         MOV     R2,#0x64
   \   000023   7B00         MOV     R3,#0x0
   \   000025   12....       LCALL   ?US_DIV_MOD
   \   000028   12....       LCALL   ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_14:
   \   00002B   12....       LCALL   ??Subroutine13_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_24:
   \   00002E   12....       LCALL   ?DEALLOC_XSTACK8
    925            // write the higher bit of the temperatue
    926            HalLcd_HW_LoadPicture(&RTCODE[ten * 85],40,17,64,24,TRUE);
   \   000031                ; Setup parameters for call to function HalLcd_HW_LoadPicture
   \   000031   75..01       MOV     ?V0 + 0,#0x1
   \   000034   78..         MOV     R0,#?V0 + 0
   \   000036   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000039   75..18       MOV     ?V0 + 0,#0x18
   \   00003C   78..         MOV     R0,#?V0 + 0
   \   00003E   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000041   7D40         MOV     R5,#0x40
   \   000043   7C11         MOV     R4,#0x11
   \   000045   EE           MOV     A,R6
   \   000046   F8           MOV     R0,A
   \   000047   EF           MOV     A,R7
   \   000048   F9           MOV     R1,A
   \   000049   7A64         MOV     R2,#0x64
   \   00004B   7B00         MOV     R3,#0x0
   \   00004D   12....       LCALL   ?US_DIV_MOD
   \   000050   EA           MOV     A,R2
   \   000051   F8           MOV     R0,A
   \   000052   EB           MOV     A,R3
   \   000053   F9           MOV     R1,A
   \   000054   7A0A         MOV     R2,#0xa
   \   000056   7B00         MOV     R3,#0x0
   \   000058   12....       LCALL   ?US_DIV_MOD
   \   00005B   12....       LCALL   ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_15:
   \   00005E   12....       LCALL   ??Subroutine13_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_25:
   \   000061   12....       LCALL   ?DEALLOC_XSTACK8
    927            // write the middle bit of the temperatue
    928            HalLcd_HW_LoadPicture(&RTCODE[one * 85],40,17,90,24,TRUE);
   \   000064                ; Setup parameters for call to function HalLcd_HW_LoadPicture
   \   000064   75..01       MOV     ?V0 + 0,#0x1
   \   000067   78..         MOV     R0,#?V0 + 0
   \   000069   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00006C   75..18       MOV     ?V0 + 0,#0x18
   \   00006F   78..         MOV     R0,#?V0 + 0
   \   000071   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000074   7D5A         MOV     R5,#0x5a
   \   000076   7C11         MOV     R4,#0x11
   \   000078   EE           MOV     A,R6
   \   000079   F8           MOV     R0,A
   \   00007A   EF           MOV     A,R7
   \   00007B   F9           MOV     R1,A
   \   00007C   7A0A         MOV     R2,#0xa
   \   00007E   7B00         MOV     R3,#0x0
   \   000080   12....       LCALL   ?US_DIV_MOD
   \   000083   EA           MOV     A,R2
   \   000084   12....       LCALL   ??Subroutine11_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_13:
   \   000087   02....       LJMP    ?Subroutine0 & 0xFFFF
    929            // write the lower bit of the temperature
    930          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine6:
   \   000000   E8           MOV     A,R0
   \   000001                REQUIRE ??Subroutine11_0
   \   000001                ; // Fall through to label ??Subroutine11_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine11_0:
   \   000000   75F055       MOV     B,#0x55
   \   000003   A4           MUL     AB
   \   000004   F8           MOV     R0,A
   \   000005   A9F0         MOV     R1,B
   \   000007   74..         MOV     A,#RTCODE & 0xff
   \   000009   28           ADD     A,R0
   \   00000A   FA           MOV     R2,A
   \   00000B   74..         MOV     A,#(RTCODE >> 8) & 0xff
   \   00000D   39           ADDC    A,R1
   \   00000E   FB           MOV     R3,A
   \   00000F   7928         MOV     R1,#0x28
   \   000011   22           RET
    931          
    932          
    933          /************************************************************** 
    934           * @fn      HalLcdWriteRelayState
    935           *
    936           * @brief   Load the relay state picture
    937           *
    938           * @param   state - ture the relay is closed,false the relay is opened
    939           *
    940           * @return  None  
    941           *
    942          **************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    943          void HalLcdWriteRelayState(bool  state)
   \                     HalLcdWriteRelayState:
    944          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
    945            if(state)
   \   000006   6005         JZ      ??HalLcdWriteRelayState_0
    946              HalLcd_HW_LoadPicture(Arrow,24,11,112,24,TRUE); 
   \   000008                ; Setup parameters for call to function HalLcd_HW_LoadPicture
   \   000008   75..01       MOV     ?V0 + 0,#0x1
   \   00000B   8003         SJMP    ??HalLcdWriteRelayState_1
    947            else
    948              HalLcd_HW_LoadPicture(Arrow,24,11,112,24,FALSE); 
   \                     ??HalLcdWriteRelayState_0:
   \   00000D                ; Setup parameters for call to function HalLcd_HW_LoadPicture
   \   00000D   75..00       MOV     ?V0 + 0,#0x0
   \                     ??HalLcdWriteRelayState_1:
   \   000010   78..         MOV     R0,#?V0 + 0
   \   000012   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000015   75..18       MOV     ?V0 + 0,#0x18
   \   000018   78..         MOV     R0,#?V0 + 0
   \   00001A   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00001D   7D70         MOV     R5,#0x70
   \   00001F   7C0B         MOV     R4,#0xb
   \   000021   7918         MOV     R1,#0x18
   \   000023   7A..         MOV     R2,#Arrow & 0xff
   \   000025   7B..         MOV     R3,#(Arrow >> 8) & 0xff
   \   000027   02....       LJMP    ?Subroutine0 & 0xFFFF
    949          }
    950          
    951          /************************************************************** 
    952           * @fn      HalLcdWriteDeviceID
    953           *
    954           * @brief   Load the DeviceID
    955           *
    956           * @param   num - the num to display
    957           * 
    958           *          shift - true to blink the highbit , false lowerbit
    959           *         
    960           *          sign - true display D,false display N
    961           *
    962           *          blink - blink the char displayed
    963           *          
    964           * @return  None  
    965           *
    966          **************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    967          void HalLcdWriteDebug(uint8 num,bool shift,bool sign,bool clear,bool blink)
   \                     HalLcdWriteDebug:
    968          {
   \   000000   74F3         MOV     A,#-0xd
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 13
   \   000005                ; Auto size: 0
   \   000005   89..         MOV     ?V0 + 2,R1
   \   000007   8A..         MOV     ?V0 + 4,R2
   \   000009   EC           MOV     A,R4
   \   00000A   FE           MOV     R6,A
   \   00000B   8D..         MOV     ?V0 + 1,R5
    969            uint8 ten = num / 16;
   \   00000D   E9           MOV     A,R1
   \   00000E   C4           SWAP    A
   \   00000F   540F         ANL     A,#0xf
   \   000011   FF           MOV     R7,A
    970            uint8 one = num % 16;
   \   000012   740F         MOV     A,#0xf
   \   000014   55..         ANL     A,?V0 + 2
   \   000016   F5..         MOV     ?V0 + 0,A
    971            if(sign)// display the devicce id tab:D:
   \   000018   EB           MOV     A,R3
   \   000019   7B1E         MOV     R3,#0x1e
   \   00001B   7A01         MOV     R2,#0x1
   \   00001D   6004         JZ      ??HalLcdWriteDebug_0
    972            {
    973             HalLcdWriteChar5x8(13,1,30,clear);
   \   00001F                ; Setup parameters for call to function HalLcdWriteChar5x8
   \   00001F   790D         MOV     R1,#0xd
   \   000021   8002         SJMP    ??HalLcdWriteDebug_1
    974             HalLcdWriteChar5x8(17,1,35,clear);
    975            }
    976            else// display the PANID tab: N:
    977            {
    978             HalLcdWriteChar5x8(16,1,30,clear);
   \                     ??HalLcdWriteDebug_0:
   \   000023                ; Setup parameters for call to function HalLcdWriteChar5x8
   \   000023   7910         MOV     R1,#0x10
   \                     ??HalLcdWriteDebug_1:
   \   000025   12....       LCALL   ??HalLcdWriteChar5x8?relay
    979             HalLcdWriteChar5x8(17,1,35,clear);
   \   000028                ; Setup parameters for call to function HalLcdWriteChar5x8
   \   000028   EE           MOV     A,R6
   \   000029   FC           MOV     R4,A
   \   00002A   7B23         MOV     R3,#0x23
   \   00002C   7A01         MOV     R2,#0x1
   \   00002E   7911         MOV     R1,#0x11
   \   000030   12....       LCALL   ??HalLcdWriteChar5x8?relay
    980            }
    981            
    982            if(shift)
   \   000033   E5..         MOV     A,?V0 + 4
   \   000035   6010         JZ      ??HalLcdWriteDebug_2
    983            {
    984               HalLcdWriteChar5x8(ten,1,40,blink & clear);
   \   000037                ; Setup parameters for call to function HalLcdWriteChar5x8
   \   000037   E5..         MOV     A,?V0 + 1
   \   000039   5E           ANL     A,R6
   \   00003A   FC           MOV     R4,A
   \   00003B   7B28         MOV     R3,#0x28
   \   00003D   7A01         MOV     R2,#0x1
   \   00003F   EF           MOV     A,R7
   \   000040   F9           MOV     R1,A
   \   000041   12....       LCALL   ??HalLcdWriteChar5x8?relay
    985               HalLcdWriteChar5x8(one,1,45,clear);
   \   000044                ; Setup parameters for call to function HalLcdWriteChar5x8
   \   000044   EE           MOV     A,R6
   \   000045   800E         SJMP    ??HalLcdWriteDebug_3
    986            }
    987            else
    988            {
    989               HalLcdWriteChar5x8(ten,1,40,clear );
   \                     ??HalLcdWriteDebug_2:
   \   000047                ; Setup parameters for call to function HalLcdWriteChar5x8
   \   000047   EE           MOV     A,R6
   \   000048   FC           MOV     R4,A
   \   000049   7B28         MOV     R3,#0x28
   \   00004B   7A01         MOV     R2,#0x1
   \   00004D   EF           MOV     A,R7
   \   00004E   F9           MOV     R1,A
   \   00004F   12....       LCALL   ??HalLcdWriteChar5x8?relay
    990               HalLcdWriteChar5x8(one,1,45,blink & clear);
   \   000052                ; Setup parameters for call to function HalLcdWriteChar5x8
   \   000052   E5..         MOV     A,?V0 + 1
   \   000054   5E           ANL     A,R6
   \                     ??HalLcdWriteDebug_3:
   \   000055   FC           MOV     R4,A
   \   000056   7B2D         MOV     R3,#0x2d
   \   000058   7A01         MOV     R2,#0x1
   \   00005A   A9..         MOV     R1,?V0 + 0
   \   00005C   12....       LCALL   ??HalLcdWriteChar5x8?relay
    991            }
    992          }
   \   00005F   02....       LJMP    ?Subroutine1 & 0xFFFF
    993          /************************************************************** 
    994           * @fn      LoadBackground
    995           *
    996           * @brief   Load the back ground picture
    997           *
    998           * @param   None
    999           *
   1000           * @return  None  
   1001           *
   1002          **************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1003          void LoadBackground(void)
   \                     LoadBackground:
   1004          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   1005               uint8 j = 0;
   1006               // write the line
   1007               HalLcd_HW_WriteAddr(2,0);
   \   000005                ; Setup parameters for call to function HalLcd_HW_WriteAddr
   \   000005   7A00         MOV     R2,#0x0
   \   000007   7902         MOV     R1,#0x2
   \   000009   12....       LCALL   ??HalLcd_HW_WriteAddr?relay
   1008               for(j = 0; j < 128; j++)
   \   00000C   7E80         MOV     R6,#-0x80
   1009               {
   1010                 HalLcd_HW_WriteData(0x80);
   \                     ??LoadBackground_0:
   \   00000E                ; Setup parameters for call to function HalLcd_HW_WriteData
   \   00000E   12....       LCALL   ?Subroutine5 & 0xFFFF
   1011               }
   \                     ??CrossCallReturnLabel_7:
   \   000011   70FB         JNZ     ??LoadBackground_0
   1012               
   1013               
   1014               // write the point
   1015               HalLcd_HW_WriteAddr(6,84);
   \   000013                ; Setup parameters for call to function HalLcd_HW_WriteAddr
   \   000013   12....       LCALL   ?Subroutine7 & 0xFFFF
   1016               for(j = 0; j < 3; j++)
   1017               {
   1018                 HalLcd_HW_WriteData(0x80);
   \                     ??CrossCallReturnLabel_30:
   \   000016                ; Setup parameters for call to function HalLcd_HW_WriteData
   \   000016   12....       LCALL   ?Subroutine5 & 0xFFFF
   1019               }
   \                     ??CrossCallReturnLabel_8:
   \   000019   70FB         JNZ     ??CrossCallReturnLabel_30
   1020               HalLcd_HW_WriteAddr(7,84);
   \   00001B                ; Setup parameters for call to function HalLcd_HW_WriteAddr
   \   00001B   7A54         MOV     R2,#0x54
   \   00001D   7907         MOV     R1,#0x7
   \   00001F   12....       LCALL   ??Subroutine14_0 & 0xFFFF
   1021               for(j = 0; j < 3; j++)
   1022               {
   1023                 HalLcd_HW_WriteData(0x03);
   \                     ??CrossCallReturnLabel_32:
   \   000022                ; Setup parameters for call to function HalLcd_HW_WriteData
   \   000022   7903         MOV     R1,#0x3
   \   000024   12....       LCALL   ??Subroutine10_0 & 0xFFFF
   1024               }
   \                     ??CrossCallReturnLabel_11:
   \   000027   70F9         JNZ     ??CrossCallReturnLabel_32
   1025               //HalLcd_HW_WriteST();
   1026              // HalLcd_HW_WriteSTU();
   1027               HalLcd_HW_WriteRTU();
   \   000029                ; Setup parameters for call to function HalLcd_HW_WriteRTU
   \   000029   12....       LCALL   ??HalLcd_HW_WriteRTU?relay
   1028          }
   \   00002C   02....       LJMP    ??Subroutine9_0 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine7:
   \   000000   7A54         MOV     R2,#0x54
   \   000002   7906         MOV     R1,#0x6
   \   000004                REQUIRE ??Subroutine14_0
   \   000004                ; // Fall through to label ??Subroutine14_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine14_0:
   \   000000   12....       LCALL   ??HalLcd_HW_WriteAddr?relay
   \   000003   7E03         MOV     R6,#0x3
   \   000005   22           RET
   1029          
   1030          
   1031          /************************************************************** 
   1032           * @fn      HalLcdWritePower
   1033           *
   1034           * @brief   Load the power picture
   1035           *
   1036           * @param   POWER-TRUE-power on,false-power off 
   1037           *
   1038           * @return  None  
   1039           *
   1040          **************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1041          void HalLcdWritePower(bool clear)
   \                     HalLcdWritePower:
   1042          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   1043            if(!clear) //remove the picture
   \   000006   702D         JNZ     ??HalLcdWritePower_0
   1044            {
   1045                 HalLcd_HW_LoadPicture(POWER_PIC,24,19,81,0,FALSE); 
   \   000008                ; Setup parameters for call to function HalLcd_HW_LoadPicture
   \   000008   75..00       MOV     ?V0 + 0,#0x0
   \   00000B   78..         MOV     R0,#?V0 + 0
   \   00000D   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000010   78..         MOV     R0,#?V0 + 0
   \   000012   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000015   7D51         MOV     R5,#0x51
   \   000017   7C13         MOV     R4,#0x13
   \   000019   7918         MOV     R1,#0x18
   \   00001B   7A..         MOV     R2,#POWER_PIC & 0xff
   \   00001D   7B..         MOV     R3,#(POWER_PIC >> 8) & 0xff
   \   00001F   12....       LCALL   ??Subroutine13_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_26:
   \   000022   12....       LCALL   ?DEALLOC_XSTACK8
   1046                 HalLcd_HW_WriteAddr( 2,81);
   \   000025                ; Setup parameters for call to function HalLcd_HW_WriteAddr
   \   000025   7A51         MOV     R2,#0x51
   \   000027   7902         MOV     R1,#0x2
   \   000029   12....       LCALL   ??HalLcd_HW_WriteAddr?relay
   1047                 for(uint8 i = 0; i < 19;i++)
   \   00002C   7E13         MOV     R6,#0x13
   1048                 {
   1049                   HalLcd_HW_WriteData(0x80);
   \                     ??HalLcdWritePower_1:
   \   00002E                ; Setup parameters for call to function HalLcd_HW_WriteData
   \   00002E   12....       LCALL   ?Subroutine5 & 0xFFFF
   1050                 }
   1051            }
   \                     ??CrossCallReturnLabel_9:
   \   000031   6022         JZ      ??HalLcdWritePower_2
   \   000033   80F9         SJMP    ??HalLcdWritePower_1
   1052            else
   1053            {
   1054                 HalLcd_HW_LoadPicture( POWER_PIC,24,19,81,0,TRUE);
   \                     ??HalLcdWritePower_0:
   \   000035                ; Setup parameters for call to function HalLcd_HW_LoadPicture
   \   000035   75..01       MOV     ?V0 + 0,#0x1
   \   000038   78..         MOV     R0,#?V0 + 0
   \   00003A   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00003D   75..00       MOV     ?V0 + 0,#0x0
   \   000040   78..         MOV     R0,#?V0 + 0
   \   000042   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000045   7D51         MOV     R5,#0x51
   \   000047   7C13         MOV     R4,#0x13
   \   000049   7918         MOV     R1,#0x18
   \   00004B   7A..         MOV     R2,#POWER_PIC & 0xff
   \   00004D   7B..         MOV     R3,#(POWER_PIC >> 8) & 0xff
   \   00004F   12....       LCALL   ??Subroutine13_0 & 0xFFFF
   1055            }
   \                     ??CrossCallReturnLabel_27:
   \   000052   12....       LCALL   ?DEALLOC_XSTACK8
   1056             
   1057          }
   \                     ??HalLcdWritePower_2:
   \   000055   02....       LJMP    ??Subroutine9_0 & 0xFFFF
   1058          
   1059          /************************************************************** 
   1060           * @fn      HalLcdWriteError
   1061           *
   1062           * @brief   Load the Error picture when the NTC is not break down
   1063           *
   1064           * @param   clear-TRUE-error occur,false-normal 
   1065           *
   1066           * @return  None  
   1067           *
   1068          **************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1069          void HalLcdWriteError(bool clear)
   \                     HalLcdWriteError:
   1070          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   1071            if(clear)
   \   000006   6022         JZ      ??HalLcdWriteError_0
   1072            {
   1073              HalLcd_HW_LoadPicture(ERROR_PIC,40,68,39,24,TRUE);
   \   000008                ; Setup parameters for call to function HalLcd_HW_LoadPicture
   \   000008   75..01       MOV     ?V0 + 0,#0x1
   \   00000B   78..         MOV     R0,#?V0 + 0
   \   00000D   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000010   75..18       MOV     ?V0 + 0,#0x18
   \   000013   78..         MOV     R0,#?V0 + 0
   \   000015   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000018   7D27         MOV     R5,#0x27
   \   00001A   7C44         MOV     R4,#0x44
   \   00001C   7928         MOV     R1,#0x28
   \   00001E   7A..         MOV     R2,#ERROR_PIC & 0xff
   \   000020   7B..         MOV     R3,#(ERROR_PIC >> 8) & 0xff
   \   000022   12....       LCALL   ??Subroutine13_0 & 0xFFFF
   1074            }
   \                     ??CrossCallReturnLabel_28:
   \   000025   12....       LCALL   ?DEALLOC_XSTACK8
   \   000028   8036         SJMP    ??HalLcdWriteError_1
   1075            else
   1076            {
   1077               HalLcd_HW_LoadPicture(ERROR_PIC,40,68,39,24,FALSE);
   \                     ??HalLcdWriteError_0:
   \   00002A                ; Setup parameters for call to function HalLcd_HW_LoadPicture
   \   00002A   75..00       MOV     ?V0 + 0,#0x0
   \   00002D   78..         MOV     R0,#?V0 + 0
   \   00002F   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000032   75..18       MOV     ?V0 + 0,#0x18
   \   000035   78..         MOV     R0,#?V0 + 0
   \   000037   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00003A   7D27         MOV     R5,#0x27
   \   00003C   7C44         MOV     R4,#0x44
   \   00003E   7928         MOV     R1,#0x28
   \   000040   7A..         MOV     R2,#ERROR_PIC & 0xff
   \   000042   7B..         MOV     R3,#(ERROR_PIC >> 8) & 0xff
   \   000044   12....       LCALL   ??Subroutine13_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_29:
   \   000047   12....       LCALL   ?DEALLOC_XSTACK8
   1078               HalLcd_HW_WriteAddr(6,84);
   \   00004A                ; Setup parameters for call to function HalLcd_HW_WriteAddr
   \   00004A   12....       LCALL   ?Subroutine7 & 0xFFFF
   1079               
   1080               // write the point
   1081               uint8 j = 0;
   1082               for(j = 0; j < 3; j++)
   1083               {
   1084                 HalLcd_HW_WriteData(0x80);
   \                     ??CrossCallReturnLabel_31:
   \   00004D                ; Setup parameters for call to function HalLcd_HW_WriteData
   \   00004D   12....       LCALL   ?Subroutine5 & 0xFFFF
   1085               }
   \                     ??CrossCallReturnLabel_10:
   \   000050   70FB         JNZ     ??CrossCallReturnLabel_31
   1086               HalLcd_HW_WriteAddr(7,84);
   \   000052                ; Setup parameters for call to function HalLcd_HW_WriteAddr
   \   000052   7A54         MOV     R2,#0x54
   \   000054   7907         MOV     R1,#0x7
   \   000056   12....       LCALL   ??Subroutine14_0 & 0xFFFF
   1087               for(j = 0; j < 3; j++)
   1088               {
   1089                 HalLcd_HW_WriteData(0x03);
   \                     ??CrossCallReturnLabel_33:
   \   000059                ; Setup parameters for call to function HalLcd_HW_WriteData
   \   000059   7903         MOV     R1,#0x3
   \   00005B   12....       LCALL   ??Subroutine10_0 & 0xFFFF
   1090               }
   1091            }
   \                     ??CrossCallReturnLabel_12:
   \   00005E   70F9         JNZ     ??CrossCallReturnLabel_33
   1092          
   1093          }
   \                     ??HalLcdWriteError_1:
   \   000060   02....       LJMP    ??Subroutine9_0 & 0xFFFF

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??HalLcdInit?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalLcdInit

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??HalLcd_HW_WaitUs?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalLcd_HW_WaitUs

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??HalLcd_HW_WriteCommand?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalLcd_HW_WriteCommand

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??HalLcd_HW_WriteData?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalLcd_HW_WriteData

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??HalLcd_HW_WriteAddr?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalLcd_HW_WriteAddr

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??HalLcd_HW_Clear?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalLcd_HW_Clear

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??HalLcdWriteChar5x8?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalLcdWriteChar5x8

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??HalLcd_HW_LoadPicture?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalLcd_HW_LoadPicture

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??HalLcd_HW_WriteST?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalLcd_HW_WriteST

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??HalLcd_HW_WriteSTU?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalLcd_HW_WriteSTU

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??HalLcd_HW_WriteRTU?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalLcd_HW_WriteRTU

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??HalLcdWriteWiFiMod?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalLcdWriteWiFiMod

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??HalLcdWriteSetTemperature?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalLcdWriteSetTemperature

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??HalLcdWriteEndMod?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalLcdWriteEndMod

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??HalLcdWriteRealTempeMod?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalLcdWriteRealTempeMod

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??HalLcdWriteRealTemperature?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalLcdWriteRealTemperature

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??HalLcdWriteRelayState?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalLcdWriteRelayState

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??HalLcdWriteDebug?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalLcdWriteDebug

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??LoadBackground?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    LoadBackground

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??HalLcdWritePower?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalLcdWritePower

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??HalLcdWriteError?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalLcdWriteError
   1094          
   1095          #endif
   1096          /**************************************************************************************************
   1097          **************************************************************************************************/
   1098          
   1099          
   1100          

   Maximum stack usage in bytes:

     Function                    ISTACK PSTACK XSTACK
     --------                    ------ ------ ------
     HalLcdInit                      2      0      0
       -> HalLcd_HW_WriteCommand     4      0      0
       -> HalLcd_HW_WaitUs           4      0      0
       -> HalLcd_HW_WriteCommand     4      0      0
       -> HalLcd_HW_WaitUs           4      0      0
       -> HalLcd_HW_WriteCommand     4      0      0
       -> HalLcd_HW_WaitUs           4      0      0
       -> HalLcd_HW_WriteCommand     4      0      0
       -> HalLcd_HW_WaitUs           4      0      0
       -> HalLcd_HW_WriteCommand     4      0      0
       -> HalLcd_HW_WriteCommand     4      0      0
       -> HalLcd_HW_WriteCommand     4      0      0
       -> HalLcd_HW_WriteCommand     4      0      0
       -> HalLcd_HW_WriteCommand     4      0      0
       -> HalLcd_HW_WriteCommand     4      0      0
       -> HalLcd_HW_WriteCommand     4      0      0
       -> HalLcd_HW_WriteCommand     4      0      0
       -> HalLcd_HW_Clear            4      0      0
       -> LoadBackground             4      0      0
     HalLcdWriteChar5x8              0      0     26
       -> HalLcd_HW_WriteAddr        0      0     26
       -> HalLcd_HW_WriteData        0      0     26
       -> HalLcd_HW_WriteData        0      0     26
     HalLcdWriteDebug                0      0     13
       -> HalLcdWriteChar5x8         0      0     26
       -> HalLcdWriteChar5x8         0      0     26
       -> HalLcdWriteChar5x8         0      0     26
       -> HalLcdWriteChar5x8         0      0     26
       -> HalLcdWriteChar5x8         0      0     26
       -> HalLcdWriteChar5x8         0      0     26
       -> HalLcdWriteChar5x8         0      0     26
       -> HalLcdWriteChar5x8         0      0     26
     HalLcdWriteEndMod               0      0     11
       -> HalLcd_HW_LoadPicture      0      0     22
       -> HalLcd_HW_LoadPicture      0      0     22
     HalLcdWriteError                0      0     11
       -> HalLcd_HW_LoadPicture      0      0     22
       -> HalLcd_HW_LoadPicture      0      0     22
       -> HalLcd_HW_WriteAddr        0      0     18
       -> HalLcd_HW_WriteData        0      0     18
       -> HalLcd_HW_WriteAddr        0      0     18
       -> HalLcd_HW_WriteData        0      0     18
     HalLcdWritePower                0      0     11
       -> HalLcd_HW_LoadPicture      0      0     22
       -> HalLcd_HW_WriteAddr        0      0     18
       -> HalLcd_HW_WriteData        0      0     18
       -> HalLcd_HW_LoadPicture      0      0     22
     HalLcdWriteRealTempeMod         0      0     11
       -> HalLcd_HW_LoadPicture      0      0     22
       -> HalLcd_HW_LoadPicture      0      0     22
     HalLcdWriteRealTemperature      1      0     11
       -> HalLcd_HW_LoadPicture      0      0     22
       -> HalLcd_HW_LoadPicture      0      0     22
       -> HalLcd_HW_LoadPicture      0      0     22
     HalLcdWriteRelayState           0      0     11
       -> HalLcd_HW_LoadPicture      0      0     22
       -> HalLcd_HW_LoadPicture      0      0     22
     HalLcdWriteSetTemperature       0      0     12
       -> HalLcd_HW_LoadPicture      0      0     24
       -> HalLcd_HW_LoadPicture      0      0     24
       -> HalLcd_HW_LoadPicture      0      0     24
       -> HalLcd_HW_WriteAddr        0      0     20
       -> HalLcd_HW_WriteData        0      0     20
       -> HalLcd_HW_LoadPicture      0      0     24
       -> HalLcd_HW_WriteAddr        0      0     20
       -> HalLcd_HW_WriteData        0      0     20
     HalLcdWriteWiFiMod              0      0     11
       -> HalLcd_HW_LoadPicture      0      0     22
       -> HalLcd_HW_LoadPicture      0      0     22
       -> HalLcd_HW_LoadPicture      0      0     22
       -> HalLcd_HW_LoadPicture      0      0     22
     HalLcd_HW_Clear                 0      0      9
       -> HalLcd_HW_WriteAddr        0      0     18
       -> HalLcd_HW_WriteData        0      0     18
     HalLcd_HW_LoadPicture           0      0     30
       -> HalLcd_HW_WriteAddr        0      0     36
       -> HalLcd_HW_WriteData        0      0     36
       -> HalLcd_HW_WriteData        0      0     36
     HalLcd_HW_WaitUs                0      0      9
     HalLcd_HW_WriteAddr             0      0     27
       -> HalLcd_HW_WriteCommand     0      0     18
       -> HalLcd_HW_WriteCommand     0      0     18
       -> HalLcd_HW_WriteCommand     0      0     18
     HalLcd_HW_WriteCommand          0      0     18
       -> HalLcd_HW_WaitUs           0      0     18
       -> HalLcd_HW_WaitUs           0      0     18
       -> HalLcd_HW_WaitUs           0      0     18
     HalLcd_HW_WriteData             0      0     27
       -> HalLcd_HW_WaitUs           0      0     18
       -> HalLcd_HW_WaitUs           0      0     18
     HalLcd_HW_WriteRTU              0      0     20
       -> HalLcd_HW_LoadPicture      0      0     22
     HalLcd_HW_WriteST               0      0     11
       -> HalLcd_HW_LoadPicture      0      0     22
     HalLcd_HW_WriteSTU              0      0     11
       -> HalLcd_HW_LoadPicture      0      0     22
       -> HalLcd_HW_LoadPicture      0      0     22
       -> HalLcd_HW_WriteAddr        0      0     18
       -> HalLcd_HW_WriteData        0      0     18
     LoadBackground                  0      0      9
       -> HalLcd_HW_WriteAddr        0      0     18
       -> HalLcd_HW_WriteData        0      0     18
       -> HalLcd_HW_WriteAddr        0      0     18
       -> HalLcd_HW_WriteData        0      0     18
       -> HalLcd_HW_WriteAddr        0      0     18
       -> HalLcd_HW_WriteData        0      0     18
       -> HalLcd_HW_WriteRTU         0      0     18


   Segment part sizes:

     Function/Label                     Bytes
     --------------                     -----
     _A_P1                                 1
     _A_P2                                 1
     P1SEL                                 1
     P2SEL                                 1
     P1DIR                                 1
     P2DIR                                 1
     ST_PIC                               30
     ST_Unit                              20
     RT_Unit                              22
     WiFi                                 81
     WiFi_1                               81
     WiFi_2                               81
     WiFi_3                               81
     Auto                                 60
     RT                                   51
     FT                                   51
     Arrow                                33
     STCODE                              360
     RTCODE                              850
     ASCII_CODE                           90
     POWER_PIC                            57
     ERROR_PIC                           340
     HalLcdInit                           91
     ?Subroutine4                         11
     HalLcd_HW_WaitUs                     53
     HalLcd_HW_WriteCommand               59
     ?Subroutine2                          4
     ??Subroutine9_0                       5
     HalLcd_HW_WriteData                  56
     HalLcd_HW_WriteAddr                  35
     HalLcd_HW_Clear                      34
     HalLcdWriteChar5x8                   65
     ?Subroutine1                          5
     ?Subroutine8                          9
     HalLcd_HW_LoadPicture               123
     ?Subroutine0                          6
     HalLcd_HW_WriteST                    34
     ??Subroutine13_0                      6
     HalLcd_HW_WriteSTU                   91
     ?Subroutine5                          2
     ??Subroutine10_0                      6
     HalLcd_HW_WriteRTU                   34
     HalLcdWriteWiFiMod                  138
     HalLcdWriteSetTemperature           172
     ?Subroutine3                          8
     ??Subroutine12_0                     15
     HalLcdWriteEndMod                    42
     HalLcdWriteRealTempeMod              60
     HalLcdWriteRealTemperature          138
     ?Subroutine6                          1
     ??Subroutine11_0                     18
     HalLcdWriteRelayState                42
     HalLcdWriteDebug                     98
     LoadBackground                       47
     ?Subroutine7                          4
     ??Subroutine14_0                      6
     HalLcdWritePower                     88
     HalLcdWriteError                     99
     ??HalLcdInit?relay                    6
     ??HalLcd_HW_WaitUs?relay              6
     ??HalLcd_HW_WriteCommand?relay        6
     ??HalLcd_HW_WriteData?relay           6
     ??HalLcd_HW_WriteAddr?relay           6
     ??HalLcd_HW_Clear?relay               6
     ??HalLcdWriteChar5x8?relay            6
     ??HalLcd_HW_LoadPicture?relay         6
     ??HalLcd_HW_WriteST?relay             6
     ??HalLcd_HW_WriteSTU?relay            6
     ??HalLcd_HW_WriteRTU?relay            6
     ??HalLcdWriteWiFiMod?relay            6
     ??HalLcdWriteSetTemperature?relay     6
     ??HalLcdWriteEndMod?relay             6
     ??HalLcdWriteRealTempeMod?relay       6
     ??HalLcdWriteRealTemperature?relay    6
     ??HalLcdWriteRelayState?relay         6
     ??HalLcdWriteDebug?relay              6
     ??LoadBackground?relay                6
     ??HalLcdWritePower?relay              6
     ??HalLcdWriteError?relay              6

 
 1 705 bytes in segment BANKED_CODE
   126 bytes in segment BANK_RELAYS
     6 bytes in segment SFR_AN
 2 288 bytes in segment XDATA_ROM_C
 
 1 831 bytes of CODE  memory
 2 288 bytes of CONST memory
     0 bytes of DATA  memory (+ 6 bytes shared)

Errors: none
Warnings: none
